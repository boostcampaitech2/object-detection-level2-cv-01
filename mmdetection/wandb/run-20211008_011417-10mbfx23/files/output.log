
2021-10-08 01:14:35,091 - mmdet - INFO - Epoch [1][50/1109]	lr: 1.170e-04, eta: 3:23:51, time: 0.221, data_time: 0.049, memory: 1027, loss_center_heatmap: 10.5592, loss_wh: 2.3369, loss_offset: 0.4971, loss: 13.3932
2021-10-08 01:14:43,028 - mmdet - INFO - Epoch [1][100/1109]	lr: 2.160e-04, eta: 2:55:03, time: 0.159, data_time: 0.005, memory: 1027, loss_center_heatmap: 3.6301, loss_wh: 2.3679, loss_offset: 0.4717, loss: 6.4697
2021-10-08 01:14:50,984 - mmdet - INFO - Epoch [1][150/1109]	lr: 3.150e-04, eta: 2:45:28, time: 0.159, data_time: 0.005, memory: 1027, loss_center_heatmap: 3.4828, loss_wh: 2.3805, loss_offset: 0.4291, loss: 6.2924
2021-10-08 01:14:59,222 - mmdet - INFO - Epoch [1][200/1109]	lr: 4.140e-04, eta: 2:41:55, time: 0.165, data_time: 0.005, memory: 1027, loss_center_heatmap: 3.3193, loss_wh: 2.0919, loss_offset: 0.3813, loss: 5.7925
2021-10-08 01:15:07,055 - mmdet - INFO - Epoch [1][250/1109]	lr: 5.130e-04, eta: 2:38:15, time: 0.157, data_time: 0.005, memory: 1027, loss_center_heatmap: 3.3333, loss_wh: 2.2669, loss_offset: 0.3508, loss: 5.9510
2021-10-08 01:15:14,956 - mmdet - INFO - Epoch [1][300/1109]	lr: 6.120e-04, eta: 2:35:57, time: 0.158, data_time: 0.005, memory: 1027, loss_center_heatmap: 3.2867, loss_wh: 2.2996, loss_offset: 0.2936, loss: 5.8799
2021-10-08 01:15:22,850 - mmdet - INFO - Epoch [1][350/1109]	lr: 7.110e-04, eta: 2:34:16, time: 0.158, data_time: 0.005, memory: 1027, loss_center_heatmap: 3.3257, loss_wh: 2.2974, loss_offset: 0.2718, loss: 5.8950
2021-10-08 01:15:30,641 - mmdet - INFO - Epoch [1][400/1109]	lr: 8.100e-04, eta: 2:32:44, time: 0.156, data_time: 0.005, memory: 1027, loss_center_heatmap: 3.3783, loss_wh: 2.4770, loss_offset: 0.2593, loss: 6.1146
2021-10-08 01:15:38,523 - mmdet - INFO - Epoch [1][450/1109]	lr: 9.090e-04, eta: 2:31:41, time: 0.158, data_time: 0.005, memory: 1027, loss_center_heatmap: 3.3462, loss_wh: 2.3488, loss_offset: 0.2519, loss: 5.9469
2021-10-08 01:15:46,113 - mmdet - INFO - Epoch [1][500/1109]	lr: 1.008e-03, eta: 2:30:18, time: 0.152, data_time: 0.005, memory: 1027, loss_center_heatmap: 3.2535, loss_wh: 2.3196, loss_offset: 0.2474, loss: 5.8204
2021-10-08 01:15:53,781 - mmdet - INFO - Epoch [1][550/1109]	lr: 1.107e-03, eta: 2:29:16, time: 0.153, data_time: 0.005, memory: 1027, loss_center_heatmap: 3.2986, loss_wh: 2.4240, loss_offset: 0.2461, loss: 5.9687
2021-10-08 01:16:01,439 - mmdet - INFO - Epoch [1][600/1109]	lr: 1.206e-03, eta: 2:28:22, time: 0.153, data_time: 0.005, memory: 1027, loss_center_heatmap: 3.3466, loss_wh: 2.3973, loss_offset: 0.2515, loss: 5.9955
2021-10-08 01:16:09,722 - mmdet - INFO - Epoch [1][650/1109]	lr: 1.305e-03, eta: 2:28:28, time: 0.166, data_time: 0.005, memory: 1027, loss_center_heatmap: 3.2214, loss_wh: 2.1912, loss_offset: 0.2553, loss: 5.6679
2021-10-08 01:16:17,514 - mmdet - INFO - Epoch [1][700/1109]	lr: 1.404e-03, eta: 2:27:53, time: 0.156, data_time: 0.005, memory: 1027, loss_center_heatmap: 3.2533, loss_wh: 2.1821, loss_offset: 0.2504, loss: 5.6858
2021-10-08 01:16:25,683 - mmdet - INFO - Epoch [1][750/1109]	lr: 1.503e-03, eta: 2:27:50, time: 0.163, data_time: 0.005, memory: 1027, loss_center_heatmap: 3.2768, loss_wh: 2.2703, loss_offset: 0.2530, loss: 5.8001
2021-10-08 01:16:33,537 - mmdet - INFO - Epoch [1][800/1109]	lr: 1.602e-03, eta: 2:27:25, time: 0.157, data_time: 0.005, memory: 1027, loss_center_heatmap: 3.2512, loss_wh: 2.2895, loss_offset: 0.2496, loss: 5.7903
2021-10-08 01:16:41,425 - mmdet - INFO - Epoch [1][850/1109]	lr: 1.701e-03, eta: 2:27:03, time: 0.158, data_time: 0.005, memory: 1027, loss_center_heatmap: 3.3361, loss_wh: 2.2219, loss_offset: 0.2537, loss: 5.8117
2021-10-08 01:16:49,178 - mmdet - INFO - Epoch [1][900/1109]	lr: 1.800e-03, eta: 2:26:35, time: 0.155, data_time: 0.005, memory: 1027, loss_center_heatmap: 3.2764, loss_wh: 2.3302, loss_offset: 0.2448, loss: 5.8514
2021-10-08 01:16:57,182 - mmdet - INFO - Epoch [1][950/1109]	lr: 1.899e-03, eta: 2:26:24, time: 0.160, data_time: 0.005, memory: 1027, loss_center_heatmap: 3.2828, loss_wh: 2.1667, loss_offset: 0.2492, loss: 5.6987
2021-10-08 01:17:05,046 - mmdet - INFO - Exp name: CenterNet_R50.py
2021-10-08 01:17:05,047 - mmdet - INFO - Epoch [1][1000/1109]	lr: 1.998e-03, eta: 2:26:05, time: 0.157, data_time: 0.005, memory: 1027, loss_center_heatmap: 3.3454, loss_wh: 2.2328, loss_offset: 0.2525, loss: 5.8307
2021-10-08 01:17:12,867 - mmdet - INFO - Epoch [1][1050/1109]	lr: 2.000e-03, eta: 2:25:45, time: 0.156, data_time: 0.005, memory: 1027, loss_center_heatmap: 3.3747, loss_wh: 2.3003, loss_offset: 0.2438, loss: 5.9187
2021-10-08 01:17:20,990 - mmdet - INFO - Epoch [1][1100/1109]	lr: 2.000e-03, eta: 2:25:41, time: 0.162, data_time: 0.005, memory: 1027, loss_center_heatmap: 3.2872, loss_wh: 2.1066, loss_offset: 0.2518, loss: 5.6456
[                                                  ] 0/448, elapsed: 0s, ETA:
Traceback (most recent call last):
  File "tools/train.py", line 189, in <module>
    main()
  File "tools/train.py", line 185, in main
    meta=meta)
  File "/opt/conda/envs/detection/lib/python3.7/site-packages/mmdet/apis/train.py", line 174, in train_detector
    runner.run(data_loaders, cfg.workflow)
  File "/opt/conda/envs/detection/lib/python3.7/site-packages/mmcv/runner/epoch_based_runner.py", line 127, in run
    epoch_runner(data_loaders[i], **kwargs)
  File "/opt/conda/envs/detection/lib/python3.7/site-packages/mmcv/runner/epoch_based_runner.py", line 54, in train
    self.call_hook('after_train_epoch')
  File "/opt/conda/envs/detection/lib/python3.7/site-packages/mmcv/runner/base_runner.py", line 307, in call_hook
    getattr(hook, fn_name)(self)
  File "/opt/conda/envs/detection/lib/python3.7/site-packages/mmcv/runner/hooks/evaluation.py", line 237, in after_train_epoch
    self._do_evaluate(runner)
  File "/opt/conda/envs/detection/lib/python3.7/site-packages/mmdet/core/evaluation/eval_hooks.py", line 18, in _do_evaluate
    results = single_gpu_test(runner.model, self.dataloader, show=False)
  File "/opt/conda/envs/detection/lib/python3.7/site-packages/mmdet/apis/test.py", line 28, in single_gpu_test
    result = model(return_loss=False, rescale=True, **data)
  File "/opt/conda/envs/detection/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/opt/conda/envs/detection/lib/python3.7/site-packages/mmcv/parallel/data_parallel.py", line 42, in forward
    return super().forward(*inputs, **kwargs)
  File "/opt/conda/envs/detection/lib/python3.7/site-packages/torch/nn/parallel/data_parallel.py", line 159, in forward
    return self.module(*inputs[0], **kwargs[0])
  File "/opt/conda/envs/detection/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/opt/conda/envs/detection/lib/python3.7/site-packages/mmcv/runner/fp16_utils.py", line 98, in new_func
    return old_func(*args, **kwargs)
  File "/opt/conda/envs/detection/lib/python3.7/site-packages/mmdet/models/detectors/base.py", line 174, in forward
    return self.forward_test(img, img_metas, **kwargs)
  File "/opt/conda/envs/detection/lib/python3.7/site-packages/mmdet/models/detectors/base.py", line 147, in forward_test
    return self.simple_test(imgs[0], img_metas[0], **kwargs)
  File "/opt/conda/envs/detection/lib/python3.7/site-packages/mmdet/models/detectors/single_stage.py", line 103, in simple_test
    feat, img_metas, rescale=rescale)
  File "/opt/conda/envs/detection/lib/python3.7/site-packages/mmdet/models/dense_heads/base_dense_head.py", line 79, in simple_test
    return self.simple_test_bboxes(feats, img_metas, rescale=rescale)
  File "/opt/conda/envs/detection/lib/python3.7/site-packages/mmdet/models/dense_heads/dense_test_mixins.py", line 36, in simple_test_bboxes
    results_list = self.get_bboxes(*outs, img_metas, rescale=rescale)
  File "/opt/conda/envs/detection/lib/python3.7/site-packages/mmdet/models/dense_heads/centernet_head.py", line 285, in get_bboxes
    border_pixs = [img_meta['border'] for img_meta in img_metas]
  File "/opt/conda/envs/detection/lib/python3.7/site-packages/mmdet/models/dense_heads/centernet_head.py", line 285, in <listcomp>
    border_pixs = [img_meta['border'] for img_meta in img_metas]
KeyError: 'border'