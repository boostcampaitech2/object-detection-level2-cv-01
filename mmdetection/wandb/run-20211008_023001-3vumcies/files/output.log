
2021-10-08 02:30:16,454 - mmdet - INFO - Epoch [1][50/1109]	lr: 9.990e-04, eta: 1:32:36, time: 0.179, data_time: 0.050, memory: 390, loss_center_heatmap: 7.6756, loss_wh: 2.3366, loss_offset: 0.4805, loss: 10.4928, grad_norm: 39.2060
2021-10-08 02:30:22,282 - mmdet - INFO - Epoch [1][100/1109]	lr: 1.998e-03, eta: 1:16:17, time: 0.117, data_time: 0.005, memory: 390, loss_center_heatmap: 3.5629, loss_wh: 2.3656, loss_offset: 0.3277, loss: 6.2562, grad_norm: 20.8014
2021-10-08 02:30:28,572 - mmdet - INFO - Epoch [1][150/1109]	lr: 2.997e-03, eta: 1:12:22, time: 0.126, data_time: 0.005, memory: 390, loss_center_heatmap: 3.6800, loss_wh: 2.3738, loss_offset: 0.2632, loss: 6.3171, grad_norm: 16.7767
2021-10-08 02:30:35,233 - mmdet - INFO - Epoch [1][200/1109]	lr: 3.996e-03, eta: 1:11:19, time: 0.133, data_time: 0.005, memory: 390, loss_center_heatmap: 3.5475, loss_wh: 2.0784, loss_offset: 0.2566, loss: 5.8825, grad_norm: 12.2466
2021-10-08 02:30:41,417 - mmdet - INFO - Epoch [1][250/1109]	lr: 4.995e-03, eta: 1:09:39, time: 0.124, data_time: 0.005, memory: 390, loss_center_heatmap: 3.6329, loss_wh: 2.2442, loss_offset: 0.2470, loss: 6.1241, grad_norm: 24.4636
2021-10-08 02:30:47,626 - mmdet - INFO - Epoch [1][300/1109]	lr: 5.994e-03, eta: 1:08:33, time: 0.124, data_time: 0.005, memory: 390, loss_center_heatmap: 3.6511, loss_wh: 2.2638, loss_offset: 0.2520, loss: 6.1669, grad_norm: 34.0555
2021-10-08 02:30:53,856 - mmdet - INFO - Epoch [1][350/1109]	lr: 6.993e-03, eta: 1:07:46, time: 0.125, data_time: 0.005, memory: 390, loss_center_heatmap: 3.7953, loss_wh: 2.2233, loss_offset: 0.2516, loss: 6.2702, grad_norm: 54.2843
2021-10-08 02:31:00,144 - mmdet - INFO - Epoch [1][400/1109]	lr: 7.992e-03, eta: 1:07:14, time: 0.126, data_time: 0.005, memory: 390, loss_center_heatmap: 3.7494, loss_wh: 2.1906, loss_offset: 0.2517, loss: 6.1917, grad_norm: 76.1699
2021-10-08 02:31:06,390 - mmdet - INFO - Epoch [1][450/1109]	lr: 8.991e-03, eta: 1:06:45, time: 0.125, data_time: 0.005, memory: 390, loss_center_heatmap: 3.8313, loss_wh: 1.4420, loss_offset: 0.2498, loss: 5.5231, grad_norm: 56.4607
2021-10-08 02:31:12,278 - mmdet - INFO - Epoch [1][500/1109]	lr: 9.990e-03, eta: 1:05:58, time: 0.118, data_time: 0.005, memory: 390, loss_center_heatmap: 3.8779, loss_wh: 1.3250, loss_offset: 0.2480, loss: 5.4508, grad_norm: 36.4015
2021-10-08 02:31:18,230 - mmdet - INFO - Epoch [1][550/1109]	lr: 1.099e-02, eta: 1:05:22, time: 0.119, data_time: 0.005, memory: 390, loss_center_heatmap: 3.8480, loss_wh: 1.2774, loss_offset: 0.2465, loss: 5.3719, grad_norm: 38.9492
2021-10-08 02:31:24,280 - mmdet - INFO - Epoch [1][600/1109]	lr: 1.199e-02, eta: 1:04:57, time: 0.121, data_time: 0.005, memory: 390, loss_center_heatmap: 3.8270, loss_wh: 1.3160, loss_offset: 0.2517, loss: 5.3946, grad_norm: 106.7754
2021-10-08 02:31:30,805 - mmdet - INFO - Epoch [1][650/1109]	lr: 1.299e-02, eta: 1:04:56, time: 0.131, data_time: 0.006, memory: 390, loss_center_heatmap: 3.6804, loss_wh: 1.3093, loss_offset: 0.2556, loss: 5.2453, grad_norm: 32.8650
2021-10-08 02:31:36,747 - mmdet - INFO - Epoch [1][700/1109]	lr: 1.399e-02, eta: 1:04:29, time: 0.119, data_time: 0.005, memory: 390, loss_center_heatmap: 3.7360, loss_wh: 1.1974, loss_offset: 0.2522, loss: 5.1857, grad_norm: 9.6491
2021-10-08 02:31:43,176 - mmdet - INFO - Epoch [1][750/1109]	lr: 1.499e-02, eta: 1:04:25, time: 0.129, data_time: 0.005, memory: 390, loss_center_heatmap: 3.6601, loss_wh: 1.2287, loss_offset: 0.2557, loss: 5.1446, grad_norm: 34.4482
2021-10-08 02:31:49,360 - mmdet - INFO - Epoch [1][800/1109]	lr: 1.598e-02, eta: 1:04:11, time: 0.124, data_time: 0.005, memory: 390, loss_center_heatmap: 3.8523, loss_wh: 1.3043, loss_offset: 0.2522, loss: 5.4088, grad_norm: 308.1526
2021-10-08 02:31:55,295 - mmdet - INFO - Epoch [1][850/1109]	lr: 1.698e-02, eta: 1:03:50, time: 0.119, data_time: 0.005, memory: 390, loss_center_heatmap: 3.7499, loss_wh: 1.3164, loss_offset: 0.2530, loss: 5.3194, grad_norm: 316.6567
2021-10-08 02:32:01,519 - mmdet - INFO - Epoch [1][900/1109]	lr: 1.798e-02, eta: 1:03:39, time: 0.124, data_time: 0.005, memory: 390, loss_center_heatmap: 3.6747, loss_wh: 1.3478, loss_offset: 0.2472, loss: 5.2697, grad_norm: 95.8266
2021-10-08 02:32:07,698 - mmdet - INFO - Epoch [1][950/1109]	lr: 1.898e-02, eta: 1:03:28, time: 0.124, data_time: 0.005, memory: 390, loss_center_heatmap: 3.6503, loss_wh: 1.1890, loss_offset: 0.2513, loss: 5.0906, grad_norm: 75.6030
2021-10-08 02:32:13,764 - mmdet - INFO - Exp name: centernet_resnet18_dcnv2_140e_coco.py
2021-10-08 02:32:13,764 - mmdet - INFO - Epoch [1][1000/1109]	lr: 1.998e-02, eta: 1:03:14, time: 0.121, data_time: 0.005, memory: 390, loss_center_heatmap: 3.6978, loss_wh: 1.3228, loss_offset: 0.2553, loss: 5.2759, grad_norm: 3.9861
2021-10-08 02:32:19,516 - mmdet - INFO - Epoch [1][1050/1109]	lr: 2.000e-02, eta: 1:02:52, time: 0.115, data_time: 0.005, memory: 390, loss_center_heatmap: 3.7484, loss_wh: 1.2912, loss_offset: 0.2462, loss: 5.2858, grad_norm: 3.4562
[                                                  ] 0/448, elapsed: 0s, ETA:
2021-10-08 02:32:25,898 - mmdet - INFO - Epoch [1][1100/1109]	lr: 2.000e-02, eta: 1:02:48, time: 0.128, data_time: 0.005, memory: 390, loss_center_heatmap: 3.6251, loss_wh: 1.3142, loss_offset: 0.2526, loss: 5.1919, grad_norm: 2.1311
Traceback (most recent call last):
  File "tools/train.py", line 189, in <module>
    main()
  File "tools/train.py", line 185, in main
    meta=meta)
  File "/opt/conda/envs/detection/lib/python3.7/site-packages/mmdet/apis/train.py", line 174, in train_detector
    runner.run(data_loaders, cfg.workflow)
  File "/opt/conda/envs/detection/lib/python3.7/site-packages/mmcv/runner/epoch_based_runner.py", line 127, in run
    epoch_runner(data_loaders[i], **kwargs)
  File "/opt/conda/envs/detection/lib/python3.7/site-packages/mmcv/runner/epoch_based_runner.py", line 54, in train
    self.call_hook('after_train_epoch')
  File "/opt/conda/envs/detection/lib/python3.7/site-packages/mmcv/runner/base_runner.py", line 307, in call_hook
    getattr(hook, fn_name)(self)
  File "/opt/conda/envs/detection/lib/python3.7/site-packages/mmcv/runner/hooks/evaluation.py", line 237, in after_train_epoch
    self._do_evaluate(runner)
  File "/opt/conda/envs/detection/lib/python3.7/site-packages/mmdet/core/evaluation/eval_hooks.py", line 18, in _do_evaluate
    results = single_gpu_test(runner.model, self.dataloader, show=False)
  File "/opt/conda/envs/detection/lib/python3.7/site-packages/mmdet/apis/test.py", line 28, in single_gpu_test
    result = model(return_loss=False, rescale=True, **data)
  File "/opt/conda/envs/detection/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/opt/conda/envs/detection/lib/python3.7/site-packages/mmcv/parallel/data_parallel.py", line 42, in forward
    return super().forward(*inputs, **kwargs)
  File "/opt/conda/envs/detection/lib/python3.7/site-packages/torch/nn/parallel/data_parallel.py", line 159, in forward
    return self.module(*inputs[0], **kwargs[0])
  File "/opt/conda/envs/detection/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/opt/conda/envs/detection/lib/python3.7/site-packages/mmcv/runner/fp16_utils.py", line 98, in new_func
    return old_func(*args, **kwargs)
  File "/opt/conda/envs/detection/lib/python3.7/site-packages/mmdet/models/detectors/base.py", line 174, in forward
    return self.forward_test(img, img_metas, **kwargs)
  File "/opt/conda/envs/detection/lib/python3.7/site-packages/mmdet/models/detectors/base.py", line 147, in forward_test
    return self.simple_test(imgs[0], img_metas[0], **kwargs)
  File "/opt/conda/envs/detection/lib/python3.7/site-packages/mmdet/models/detectors/single_stage.py", line 103, in simple_test
    feat, img_metas, rescale=rescale)
  File "/opt/conda/envs/detection/lib/python3.7/site-packages/mmdet/models/dense_heads/base_dense_head.py", line 79, in simple_test
    return self.simple_test_bboxes(feats, img_metas, rescale=rescale)
  File "/opt/conda/envs/detection/lib/python3.7/site-packages/mmdet/models/dense_heads/dense_test_mixins.py", line 36, in simple_test_bboxes
    results_list = self.get_bboxes(*outs, img_metas, rescale=rescale)
  File "/opt/conda/envs/detection/lib/python3.7/site-packages/mmdet/models/dense_heads/centernet_head.py", line 285, in get_bboxes
    border_pixs = [img_meta['border'] for img_meta in img_metas]
  File "/opt/conda/envs/detection/lib/python3.7/site-packages/mmdet/models/dense_heads/centernet_head.py", line 285, in <listcomp>
    border_pixs = [img_meta['border'] for img_meta in img_metas]
KeyError: 'border'