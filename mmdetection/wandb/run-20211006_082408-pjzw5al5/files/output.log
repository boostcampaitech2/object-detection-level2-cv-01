/opt/conda/envs/detection/lib/python3.7/site-packages/mmdet/core/anchor/anchor_generator.py:324: UserWarning: ``grid_anchors`` would be deprecated soon. Please use ``grid_priors``
  warnings.warn('``grid_anchors`` would be deprecated soon. '
/opt/conda/envs/detection/lib/python3.7/site-packages/mmdet/core/anchor/anchor_generator.py:361: UserWarning: ``single_level_grid_anchors`` would be deprecated soon. Please use ``single_level_grid_priors``
  '``single_level_grid_anchors`` would be deprecated soon. '
2021-10-06 08:24:34,122 - mmdet - INFO - Epoch [1][50/1109]	lr: 5.851e-06, eta: 5:52:39, time: 0.382, data_time: 0.049, memory: 2702, loss_rpn_cls: 0.6317, loss_rpn_bbox: 0.0476, s0.loss_cls: 1.4565, s0.acc: 68.3008, s0.loss_bbox: 0.2003, s1.loss_cls: 0.8471, s1.acc: 64.3594, s1.loss_bbox: 0.0440, s2.loss_cls: 0.0607, s2.acc: 94.6777, s2.loss_bbox: 0.0112, loss: 3.2991
2021-10-06 08:24:50,660 - mmdet - INFO - Epoch [1][100/1109]	lr: 1.080e-05, eta: 5:28:44, time: 0.331, data_time: 0.005, memory: 2702, loss_rpn_cls: 0.4633, loss_rpn_bbox: 0.0382, s0.loss_cls: 0.3225, s0.acc: 94.4619, s0.loss_bbox: 0.1566, s1.loss_cls: 0.0914, s1.acc: 97.6387, s1.loss_bbox: 0.0399, s2.loss_cls: 0.0270, s2.acc: 98.6572, s2.loss_bbox: 0.0079, loss: 1.1468
2021-10-06 08:25:06,881 - mmdet - INFO - Epoch [1][150/1109]	lr: 1.575e-05, eta: 5:18:37, time: 0.324, data_time: 0.005, memory: 2702, loss_rpn_cls: 0.2655, loss_rpn_bbox: 0.0349, s0.loss_cls: 0.3128, s0.acc: 94.0059, s0.loss_bbox: 0.1625, s1.loss_cls: 0.0919, s1.acc: 97.2256, s1.loss_bbox: 0.0488, s2.loss_cls: 0.0279, s2.acc: 98.5264, s2.loss_bbox: 0.0094, loss: 0.9537
2021-10-06 08:25:23,105 - mmdet - INFO - Epoch [1][200/1109]	lr: 2.070e-05, eta: 5:13:26, time: 0.324, data_time: 0.005, memory: 2702, loss_rpn_cls: 0.2226, loss_rpn_bbox: 0.0412, s0.loss_cls: 0.2949, s0.acc: 93.7646, s0.loss_bbox: 0.1557, s1.loss_cls: 0.0926, s1.acc: 96.9102, s1.loss_bbox: 0.0496, s2.loss_cls: 0.0294, s2.acc: 98.2441, s2.loss_bbox: 0.0102, loss: 0.8961
2021-10-06 08:25:39,369 - mmdet - INFO - Epoch [1][250/1109]	lr: 2.565e-05, eta: 5:10:22, time: 0.325, data_time: 0.005, memory: 2702, loss_rpn_cls: 0.1789, loss_rpn_bbox: 0.0338, s0.loss_cls: 0.2802, s0.acc: 94.1729, s0.loss_bbox: 0.1366, s1.loss_cls: 0.0865, s1.acc: 96.9961, s1.loss_bbox: 0.0507, s2.loss_cls: 0.0266, s2.acc: 98.4180, s2.loss_bbox: 0.0106, loss: 0.8040
2021-10-06 08:25:55,777 - mmdet - INFO - Epoch [1][300/1109]	lr: 3.060e-05, eta: 5:08:41, time: 0.328, data_time: 0.005, memory: 2702, loss_rpn_cls: 0.1795, loss_rpn_bbox: 0.0342, s0.loss_cls: 0.3163, s0.acc: 93.2529, s0.loss_bbox: 0.1603, s1.loss_cls: 0.0984, s1.acc: 96.3965, s1.loss_bbox: 0.0620, s2.loss_cls: 0.0307, s2.acc: 98.1260, s2.loss_bbox: 0.0131, loss: 0.8946
2021-10-06 08:26:12,108 - mmdet - INFO - Epoch [1][350/1109]	lr: 3.555e-05, eta: 5:07:11, time: 0.327, data_time: 0.005, memory: 2702, loss_rpn_cls: 0.1655, loss_rpn_bbox: 0.0296, s0.loss_cls: 0.2762, s0.acc: 93.7900, s0.loss_bbox: 0.1388, s1.loss_cls: 0.0966, s1.acc: 96.1973, s1.loss_bbox: 0.0639, s2.loss_cls: 0.0304, s2.acc: 97.9922, s2.loss_bbox: 0.0138, loss: 0.8149
2021-10-06 08:26:28,786 - mmdet - INFO - Epoch [1][400/1109]	lr: 4.050e-05, eta: 5:06:48, time: 0.334, data_time: 0.005, memory: 2702, loss_rpn_cls: 0.1566, loss_rpn_bbox: 0.0330, s0.loss_cls: 0.2796, s0.acc: 93.5547, s0.loss_bbox: 0.1468, s1.loss_cls: 0.1000, s1.acc: 95.6943, s1.loss_bbox: 0.0702, s2.loss_cls: 0.0339, s2.acc: 97.5850, s2.loss_bbox: 0.0185, loss: 0.8388
2021-10-06 08:26:45,133 - mmdet - INFO - Epoch [1][450/1109]	lr: 4.545e-05, eta: 5:05:45, time: 0.327, data_time: 0.005, memory: 2702, loss_rpn_cls: 0.1467, loss_rpn_bbox: 0.0297, s0.loss_cls: 0.3130, s0.acc: 92.6904, s0.loss_bbox: 0.1583, s1.loss_cls: 0.1199, s1.acc: 94.9336, s1.loss_bbox: 0.0826, s2.loss_cls: 0.0413, s2.acc: 97.0264, s2.loss_bbox: 0.0244, loss: 0.9159
2021-10-06 08:27:01,518 - mmdet - INFO - Epoch [1][500/1109]	lr: 5.040e-05, eta: 5:04:57, time: 0.328, data_time: 0.005, memory: 2702, loss_rpn_cls: 0.1251, loss_rpn_bbox: 0.0268, s0.loss_cls: 0.2716, s0.acc: 93.4785, s0.loss_bbox: 0.1371, s1.loss_cls: 0.1094, s1.acc: 95.0889, s1.loss_bbox: 0.0786, s2.loss_cls: 0.0403, s2.acc: 96.7676, s2.loss_bbox: 0.0259, loss: 0.8149
2021-10-06 08:27:18,304 - mmdet - INFO - Epoch [1][550/1109]	lr: 5.535e-05, eta: 5:04:54, time: 0.336, data_time: 0.005, memory: 2702, loss_rpn_cls: 0.1163, loss_rpn_bbox: 0.0256, s0.loss_cls: 0.2991, s0.acc: 93.0176, s0.loss_bbox: 0.1483, s1.loss_cls: 0.1195, s1.acc: 94.6836, s1.loss_bbox: 0.0889, s2.loss_cls: 0.0411, s2.acc: 96.7383, s2.loss_bbox: 0.0272, loss: 0.8660
Traceback (most recent call last):
  File "tools/train.py", line 188, in <module>
    main()
  File "tools/train.py", line 184, in main
    meta=meta)
  File "/opt/conda/envs/detection/lib/python3.7/site-packages/mmdet/apis/train.py", line 174, in train_detector
    runner.run(data_loaders, cfg.workflow)
  File "/opt/conda/envs/detection/lib/python3.7/site-packages/mmcv/runner/epoch_based_runner.py", line 127, in run
    epoch_runner(data_loaders[i], **kwargs)
  File "/opt/conda/envs/detection/lib/python3.7/site-packages/mmcv/runner/epoch_based_runner.py", line 50, in train
    self.run_iter(data_batch, train_mode=True, **kwargs)
  File "/opt/conda/envs/detection/lib/python3.7/site-packages/mmcv/runner/epoch_based_runner.py", line 30, in run_iter
    **kwargs)
  File "/opt/conda/envs/detection/lib/python3.7/site-packages/mmcv/parallel/data_parallel.py", line 67, in train_step
    return self.module.train_step(*inputs[0], **kwargs[0])
  File "/opt/conda/envs/detection/lib/python3.7/site-packages/mmdet/models/detectors/base.py", line 238, in train_step
    losses = self(**data)
  File "/opt/conda/envs/detection/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/opt/conda/envs/detection/lib/python3.7/site-packages/mmcv/runner/fp16_utils.py", line 98, in new_func
    return old_func(*args, **kwargs)
  File "/opt/conda/envs/detection/lib/python3.7/site-packages/mmdet/models/detectors/base.py", line 172, in forward
    return self.forward_train(img, img_metas, **kwargs)
  File "/opt/conda/envs/detection/lib/python3.7/site-packages/mmdet/models/detectors/two_stage.py", line 127, in forward_train
    x = self.extract_feat(img)
  File "/opt/conda/envs/detection/lib/python3.7/site-packages/mmdet/models/detectors/two_stage.py", line 67, in extract_feat
    x = self.backbone(img)
  File "/opt/conda/envs/detection/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/opt/conda/envs/detection/lib/python3.7/site-packages/mmdet/models/backbones/swin.py", line 755, in forward
    x, hw_shape, out, out_hw_shape = stage(x, hw_shape)
  File "/opt/conda/envs/detection/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/opt/conda/envs/detection/lib/python3.7/site-packages/mmdet/models/backbones/swin.py", line 455, in forward
    x = block(x, hw_shape)
  File "/opt/conda/envs/detection/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/opt/conda/envs/detection/lib/python3.7/site-packages/mmdet/models/backbones/swin.py", line 374, in forward
    x = _inner_forward(x)
  File "/opt/conda/envs/detection/lib/python3.7/site-packages/mmdet/models/backbones/swin.py", line 361, in _inner_forward
    x = self.attn(x, hw_shape)
  File "/opt/conda/envs/detection/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/opt/conda/envs/detection/lib/python3.7/site-packages/mmdet/models/backbones/swin.py", line 251, in forward
    x = self.drop(x)
  File "/opt/conda/envs/detection/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/opt/conda/envs/detection/lib/python3.7/site-packages/mmcv/cnn/bricks/drop.py", line 44, in forward
    return drop_path(x, self.drop_prob, self.training)
  File "/opt/conda/envs/detection/lib/python3.7/site-packages/mmcv/cnn/bricks/drop.py", line 23, in drop_path
    output = x.div(keep_prob) * random_tensor.floor()
KeyboardInterrupt