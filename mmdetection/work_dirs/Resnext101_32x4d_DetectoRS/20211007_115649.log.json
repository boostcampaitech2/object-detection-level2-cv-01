{"env_info": "sys.platform: linux\nPython: 3.7.11 (default, Jul 27 2021, 14:32:16) [GCC 7.5.0]\nCUDA available: True\nGPU 0: Tesla V100-PCIE-32GB\nCUDA_HOME: None\nGCC: gcc (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0\nPyTorch: 1.7.1\nPyTorch compiling details: PyTorch built with:\n  - GCC 7.3\n  - C++ Version: 201402\n  - Intel(R) oneAPI Math Kernel Library Version 2021.3-Product Build 20210617 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v1.6.0 (Git Hash 5ef631a030a6f73131c77892041042805a06064f)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - NNPACK is enabled\n  - CPU capability usage: AVX2\n  - CUDA Runtime 11.0\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_37,code=compute_37\n  - CuDNN 8.0.5\n  - Magma 2.5.2\n  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_VULKAN_WRAPPER -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, \n\nTorchVision: 0.8.2\nOpenCV: 4.5.3\nMMCV: 1.3.14\nMMCV Compiler: GCC 7.3\nMMCV CUDA Compiler: 11.0\nMMDetection: 2.17.0+044cccd", "config": "model = dict(\n    type='CascadeRCNN',\n    backbone=dict(\n        type='DetectoRS_ResNeXt',\n        depth=50,\n        num_stages=4,\n        out_indices=(0, 1, 2, 3),\n        frozen_stages=1,\n        norm_cfg=dict(type='BN', requires_grad=True),\n        norm_eval=True,\n        style='pytorch',\n        init_cfg=dict(type='Pretrained', checkpoint='torchvision://resnet50'),\n        conv_cfg=dict(type='ConvAWS'),\n        sac=dict(type='SAC', use_deform=True),\n        stage_with_sac=(False, True, True, True),\n        output_img=True),\n    neck=dict(\n        type='RFP',\n        in_channels=[256, 512, 1024, 2048],\n        out_channels=256,\n        num_outs=5,\n        rfp_steps=2,\n        aspp_out_channels=64,\n        aspp_dilations=(1, 3, 6, 1),\n        rfp_backbone=dict(\n            rfp_inplanes=256,\n            type='DetectoRS_ResNeXt',\n            depth=101,\n            groups=32,\n            base_width=4,\n            num_stages=4,\n            out_indices=(0, 1, 2, 3),\n            frozen_stages=1,\n            norm_cfg=dict(type='BN', requires_grad=True),\n            norm_eval=True,\n            conv_cfg=dict(type='ConvAWS'),\n            sac=dict(type='SAC', use_deform=True),\n            stage_with_sac=(False, True, True, True),\n            init_cfg=dict(\n                type='Pretrained', checkpoint='open-mmlab://resnext101_32x4d'),\n            style='pytorch')),\n    rpn_head=dict(\n        type='RPNHead',\n        in_channels=256,\n        feat_channels=256,\n        anchor_generator=dict(\n            type='AnchorGenerator',\n            scales=[8],\n            ratios=[0.5, 1.0, 2.0],\n            strides=[4, 8, 16, 32, 64]),\n        bbox_coder=dict(\n            type='DeltaXYWHBBoxCoder',\n            target_means=[0.0, 0.0, 0.0, 0.0],\n            target_stds=[1.0, 1.0, 1.0, 1.0]),\n        loss_cls=dict(\n            type='CrossEntropyLoss', use_sigmoid=True, loss_weight=1.0),\n        loss_bbox=dict(\n            type='SmoothL1Loss', beta=0.1111111111111111, loss_weight=1.0)),\n    roi_head=dict(\n        type='CascadeRoIHead',\n        num_stages=3,\n        stage_loss_weights=[1, 0.5, 0.25],\n        bbox_roi_extractor=dict(\n            type='SingleRoIExtractor',\n            roi_layer=dict(type='RoIAlign', output_size=7, sampling_ratio=0),\n            out_channels=256,\n            featmap_strides=[4, 8, 16, 32]),\n        bbox_head=[\n            dict(\n                type='Shared2FCBBoxHead',\n                in_channels=256,\n                fc_out_channels=1024,\n                roi_feat_size=7,\n                num_classes=10,\n                bbox_coder=dict(\n                    type='DeltaXYWHBBoxCoder',\n                    target_means=[0.0, 0.0, 0.0, 0.0],\n                    target_stds=[0.1, 0.1, 0.2, 0.2]),\n                reg_class_agnostic=True,\n                loss_cls=dict(\n                    type='CrossEntropyLoss',\n                    use_sigmoid=False,\n                    loss_weight=1.0),\n                loss_bbox=dict(type='SmoothL1Loss', beta=1.0,\n                               loss_weight=1.0)),\n            dict(\n                type='Shared2FCBBoxHead',\n                in_channels=256,\n                fc_out_channels=1024,\n                roi_feat_size=7,\n                num_classes=10,\n                bbox_coder=dict(\n                    type='DeltaXYWHBBoxCoder',\n                    target_means=[0.0, 0.0, 0.0, 0.0],\n                    target_stds=[0.05, 0.05, 0.1, 0.1]),\n                reg_class_agnostic=True,\n                loss_cls=dict(\n                    type='CrossEntropyLoss',\n                    use_sigmoid=False,\n                    loss_weight=1.0),\n                loss_bbox=dict(type='SmoothL1Loss', beta=1.0,\n                               loss_weight=1.0)),\n            dict(\n                type='Shared2FCBBoxHead',\n                in_channels=256,\n                fc_out_channels=1024,\n                roi_feat_size=7,\n                num_classes=10,\n                bbox_coder=dict(\n                    type='DeltaXYWHBBoxCoder',\n                    target_means=[0.0, 0.0, 0.0, 0.0],\n                    target_stds=[0.033, 0.033, 0.067, 0.067]),\n                reg_class_agnostic=True,\n                loss_cls=dict(\n                    type='CrossEntropyLoss',\n                    use_sigmoid=False,\n                    loss_weight=1.0),\n                loss_bbox=dict(type='SmoothL1Loss', beta=1.0, loss_weight=1.0))\n        ]),\n    train_cfg=dict(\n        rpn=dict(\n            assigner=dict(\n                type='MaxIoUAssigner',\n                pos_iou_thr=0.7,\n                neg_iou_thr=0.3,\n                min_pos_iou=0.3,\n                match_low_quality=True,\n                ignore_iof_thr=-1),\n            sampler=dict(\n                type='RandomSampler',\n                num=256,\n                pos_fraction=0.5,\n                neg_pos_ub=-1,\n                add_gt_as_proposals=False),\n            allowed_border=0,\n            pos_weight=-1,\n            debug=False),\n        rpn_proposal=dict(\n            nms_pre=2000,\n            max_per_img=2000,\n            nms=dict(type='nms', iou_threshold=0.7),\n            min_bbox_size=0),\n        rcnn=[\n            dict(\n                assigner=dict(\n                    type='MaxIoUAssigner',\n                    pos_iou_thr=0.5,\n                    neg_iou_thr=0.5,\n                    min_pos_iou=0.5,\n                    match_low_quality=False,\n                    ignore_iof_thr=-1),\n                sampler=dict(\n                    type='RandomSampler',\n                    num=512,\n                    pos_fraction=0.25,\n                    neg_pos_ub=-1,\n                    add_gt_as_proposals=True),\n                pos_weight=-1,\n                debug=False),\n            dict(\n                assigner=dict(\n                    type='MaxIoUAssigner',\n                    pos_iou_thr=0.6,\n                    neg_iou_thr=0.6,\n                    min_pos_iou=0.6,\n                    match_low_quality=False,\n                    ignore_iof_thr=-1),\n                sampler=dict(\n                    type='RandomSampler',\n                    num=512,\n                    pos_fraction=0.25,\n                    neg_pos_ub=-1,\n                    add_gt_as_proposals=True),\n                pos_weight=-1,\n                debug=False),\n            dict(\n                assigner=dict(\n                    type='MaxIoUAssigner',\n                    pos_iou_thr=0.7,\n                    neg_iou_thr=0.7,\n                    min_pos_iou=0.7,\n                    match_low_quality=False,\n                    ignore_iof_thr=-1),\n                sampler=dict(\n                    type='RandomSampler',\n                    num=512,\n                    pos_fraction=0.25,\n                    neg_pos_ub=-1,\n                    add_gt_as_proposals=True),\n                pos_weight=-1,\n                debug=False)\n        ]),\n    test_cfg=dict(\n        rpn=dict(\n            nms_pre=1000,\n            max_per_img=1000,\n            nms=dict(type='nms', iou_threshold=0.7),\n            min_bbox_size=0),\n        rcnn=dict(\n            score_thr=0.05,\n            nms=dict(type='nms', iou_threshold=0.5),\n            max_per_img=100)))\ndataset_type = 'CocoDataset'\ndata_root = '/opt/ml/detection/dataset/'\nclasses = [\n    'General trash', 'Paper', 'Paper pack', 'Metal', 'Glass', 'Plastic',\n    'Styrofoam', 'Plastic bag', 'Battery', 'Clothing'\n]\nimg_norm_cfg = dict(mean=[0, 0, 0], std=[255.0, 255.0, 255.0], to_rgb=True)\ntrain_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations', with_bbox=True),\n    dict(type='Resize', img_scale=(300, 300), keep_ratio=True),\n    dict(type='RandomFlip', flip_ratio=0.5),\n    dict(\n        type='Normalize',\n        mean=[0, 0, 0],\n        std=[255.0, 255.0, 255.0],\n        to_rgb=True),\n    dict(type='DefaultFormatBundle'),\n    dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])\n]\ntest_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(\n        type='MultiScaleFlipAug',\n        img_scale=(300, 300),\n        flip=False,\n        transforms=[\n            dict(type='Resize', keep_ratio=True),\n            dict(type='RandomFlip'),\n            dict(\n                type='Normalize',\n                mean=[0, 0, 0],\n                std=[255.0, 255.0, 255.0],\n                to_rgb=True),\n            dict(type='ImageToTensor', keys=['img']),\n            dict(type='Collect', keys=['img'])\n        ])\n]\ndata = dict(\n    samples_per_gpu=4,\n    workers_per_gpu=2,\n    train=dict(\n        type='CocoDataset',\n        ann_file='/opt/ml/detection/dataset/train_kfold1.json',\n        img_prefix='/opt/ml/detection/dataset/',\n        classes=[\n            'General trash', 'Paper', 'Paper pack', 'Metal', 'Glass',\n            'Plastic', 'Styrofoam', 'Plastic bag', 'Battery', 'Clothing'\n        ],\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(type='Resize', img_scale=(300, 300), keep_ratio=True),\n            dict(type='RandomFlip', flip_ratio=0.5),\n            dict(\n                type='Normalize',\n                mean=[0, 0, 0],\n                std=[255.0, 255.0, 255.0],\n                to_rgb=True),\n            dict(type='DefaultFormatBundle'),\n            dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])\n        ]),\n    val=dict(\n        type='CocoDataset',\n        ann_file='/opt/ml/detection/dataset/val_kfold1.json',\n        classes=[\n            'General trash', 'Paper', 'Paper pack', 'Metal', 'Glass',\n            'Plastic', 'Styrofoam', 'Plastic bag', 'Battery', 'Clothing'\n        ],\n        img_prefix='/opt/ml/detection/dataset/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(300, 300),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[0, 0, 0],\n                        std=[255.0, 255.0, 255.0],\n                        to_rgb=True),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]),\n    test=dict(\n        type='CocoDataset',\n        ann_file='/opt/ml/detection/dataset/test.json',\n        classes=[\n            'General trash', 'Paper', 'Paper pack', 'Metal', 'Glass',\n            'Plastic', 'Styrofoam', 'Plastic bag', 'Battery', 'Clothing'\n        ],\n        img_prefix='/opt/ml/detection/dataset/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(300, 300),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[0, 0, 0],\n                        std=[255.0, 255.0, 255.0],\n                        to_rgb=True),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]))\nevaluation = dict(interval=1, metric='bbox', save_best='bbox_mAP_50')\ncheckpoint_config = dict(interval=100)\nlog_config = dict(\n    interval=50,\n    hooks=[\n        dict(type='TextLoggerHook'),\n        dict(type='WandbLoggerHook', init_kwargs=dict(project='mmdetection'))\n    ])\ncustom_hooks = [dict(type='NumClassCheckHook')]\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = None\nresume_from = None\nworkflow = [('train', 1)]\noptimizer = dict(\n    type='Adam',\n    lr=0.0001,\n    betas=(0.9, 0.999),\n    weight_decay=0.05,\n    paramwise_cfg=dict(\n        custom_keys=dict(\n            absolute_pos_embed=dict(decay_mult=0.0),\n            relative_position_bias_table=dict(decay_mult=0.0),\n            norm=dict(decay_mult=0.0))))\noptimizer_config = dict(grad_clip=None)\nlr_config = dict(\n    policy='CosineAnnealing',\n    warmup='linear',\n    warmup_iters=1000,\n    warmup_ratio=0.01,\n    min_lr=1e-06)\nrunner = dict(type='EpochBasedRunner', max_epochs=50)\nwork_dir = './work_dirs/Resnext101_32x4d_DetectoRS'\ngpu_ids = range(0, 1)\n", "seed": 2021, "exp_name": "Resnext101_32x4d_DetectoRS.py", "hook_msgs": {}}
{"mode": "train", "epoch": 1, "iter": 50, "lr": 1e-05, "memory": 5614, "data_time": 0.04979, "loss_rpn_cls": 0.65104, "loss_rpn_bbox": 0.04106, "s0.loss_cls": 0.87763, "s0.acc": 78.1123, "s0.loss_bbox": 0.18551, "s1.loss_cls": 0.37656, "s1.acc": 80.35352, "s1.loss_bbox": 0.04602, "s2.loss_cls": 0.27355, "s2.acc": 68.2041, "s2.loss_bbox": 0.0107, "loss": 2.46207, "time": 1.30206}
{"mode": "train", "epoch": 1, "iter": 100, "lr": 1e-05, "memory": 5614, "data_time": 0.0059, "loss_rpn_cls": 0.41025, "loss_rpn_bbox": 0.03778, "s0.loss_cls": 0.30621, "s0.acc": 94.24707, "s0.loss_bbox": 0.14708, "s1.loss_cls": 0.08645, "s1.acc": 97.32324, "s1.loss_bbox": 0.04336, "s2.loss_cls": 0.02794, "s2.acc": 98.51367, "s2.loss_bbox": 0.00746, "loss": 1.06652, "time": 1.25159}
{"mode": "train", "epoch": 1, "iter": 150, "lr": 2e-05, "memory": 5614, "data_time": 0.00584, "loss_rpn_cls": 0.2028, "loss_rpn_bbox": 0.03456, "s0.loss_cls": 0.35393, "s0.acc": 93.26172, "s0.loss_bbox": 0.16423, "s1.loss_cls": 0.10613, "s1.acc": 96.61816, "s1.loss_bbox": 0.06001, "s2.loss_cls": 0.03093, "s2.acc": 98.32324, "s2.loss_bbox": 0.01065, "loss": 0.96324, "time": 1.24231}
{"mode": "train", "epoch": 1, "iter": 200, "lr": 2e-05, "memory": 5614, "data_time": 0.006, "loss_rpn_cls": 0.20588, "loss_rpn_bbox": 0.04112, "s0.loss_cls": 0.35091, "s0.acc": 92.66895, "s0.loss_bbox": 0.1618, "s1.loss_cls": 0.11396, "s1.acc": 96.0332, "s1.loss_bbox": 0.06599, "s2.loss_cls": 0.03704, "s2.acc": 97.93555, "s2.loss_bbox": 0.013, "loss": 0.98971, "time": 1.23804}
{"mode": "train", "epoch": 1, "iter": 250, "lr": 3e-05, "memory": 5614, "data_time": 0.00578, "loss_rpn_cls": 0.15551, "loss_rpn_bbox": 0.03189, "s0.loss_cls": 0.30953, "s0.acc": 93.38574, "s0.loss_bbox": 0.14853, "s1.loss_cls": 0.10468, "s1.acc": 96.09375, "s1.loss_bbox": 0.06675, "s2.loss_cls": 0.03217, "s2.acc": 98.06543, "s2.loss_bbox": 0.01364, "loss": 0.8627, "time": 1.24403}
{"mode": "train", "epoch": 1, "iter": 300, "lr": 3e-05, "memory": 5614, "data_time": 0.00581, "loss_rpn_cls": 0.16273, "loss_rpn_bbox": 0.03276, "s0.loss_cls": 0.33962, "s0.acc": 92.66211, "s0.loss_bbox": 0.16852, "s1.loss_cls": 0.11262, "s1.acc": 95.76172, "s1.loss_bbox": 0.07239, "s2.loss_cls": 0.0364, "s2.acc": 97.81445, "s2.loss_bbox": 0.01513, "loss": 0.94017, "time": 1.24432}
{"mode": "train", "epoch": 1, "iter": 350, "lr": 4e-05, "memory": 5614, "data_time": 0.00552, "loss_rpn_cls": 0.14447, "loss_rpn_bbox": 0.02895, "s0.loss_cls": 0.31066, "s0.acc": 93.05664, "s0.loss_bbox": 0.15062, "s1.loss_cls": 0.11199, "s1.acc": 95.61621, "s1.loss_bbox": 0.07227, "s2.loss_cls": 0.03766, "s2.acc": 97.6123, "s2.loss_bbox": 0.01671, "loss": 0.87333, "time": 1.24373}
{"mode": "train", "epoch": 1, "iter": 400, "lr": 4e-05, "memory": 5614, "data_time": 0.00576, "loss_rpn_cls": 0.14903, "loss_rpn_bbox": 0.0328, "s0.loss_cls": 0.32572, "s0.acc": 92.72754, "s0.loss_bbox": 0.15921, "s1.loss_cls": 0.11471, "s1.acc": 95.38965, "s1.loss_bbox": 0.07808, "s2.loss_cls": 0.03959, "s2.acc": 97.38281, "s2.loss_bbox": 0.02, "loss": 0.91913, "time": 1.2277}
{"mode": "train", "epoch": 1, "iter": 450, "lr": 5e-05, "memory": 5614, "data_time": 0.00573, "loss_rpn_cls": 0.13663, "loss_rpn_bbox": 0.03006, "s0.loss_cls": 0.33973, "s0.acc": 92.32812, "s0.loss_bbox": 0.1636, "s1.loss_cls": 0.13163, "s1.acc": 94.50195, "s1.loss_bbox": 0.09397, "s2.loss_cls": 0.04443, "s2.acc": 96.87305, "s2.loss_bbox": 0.02646, "loss": 0.96652, "time": 1.22397}
{"mode": "train", "epoch": 1, "iter": 500, "lr": 5e-05, "memory": 5614, "data_time": 0.00572, "loss_rpn_cls": 0.1212, "loss_rpn_bbox": 0.02693, "s0.loss_cls": 0.29637, "s0.acc": 93.14844, "s0.loss_bbox": 0.14233, "s1.loss_cls": 0.11672, "s1.acc": 94.82715, "s1.loss_bbox": 0.08303, "s2.loss_cls": 0.0424, "s2.acc": 96.70801, "s2.loss_bbox": 0.0272, "loss": 0.85619, "time": 1.24168}
{"mode": "train", "epoch": 1, "iter": 550, "lr": 6e-05, "memory": 5614, "data_time": 0.00566, "loss_rpn_cls": 0.11829, "loss_rpn_bbox": 0.02588, "s0.loss_cls": 0.31561, "s0.acc": 92.88281, "s0.loss_bbox": 0.1456, "s1.loss_cls": 0.1269, "s1.acc": 94.2627, "s1.loss_bbox": 0.095, "s2.loss_cls": 0.04632, "s2.acc": 96.30273, "s2.loss_bbox": 0.03062, "loss": 0.90423, "time": 1.22572}
{"mode": "train", "epoch": 1, "iter": 600, "lr": 6e-05, "memory": 5614, "data_time": 0.00571, "loss_rpn_cls": 0.11939, "loss_rpn_bbox": 0.02711, "s0.loss_cls": 0.2993, "s0.acc": 92.45508, "s0.loss_bbox": 0.15007, "s1.loss_cls": 0.1244, "s1.acc": 93.8291, "s1.loss_bbox": 0.10047, "s2.loss_cls": 0.04773, "s2.acc": 95.64355, "s2.loss_bbox": 0.03452, "loss": 0.903, "time": 1.22524}
{"mode": "train", "epoch": 1, "iter": 650, "lr": 7e-05, "memory": 5614, "data_time": 0.00569, "loss_rpn_cls": 0.15157, "loss_rpn_bbox": 0.03647, "s0.loss_cls": 0.37938, "s0.acc": 91.05078, "s0.loss_bbox": 0.17917, "s1.loss_cls": 0.14803, "s1.acc": 93.16992, "s1.loss_bbox": 0.10629, "s2.loss_cls": 0.05424, "s2.acc": 95.71191, "s2.loss_bbox": 0.03371, "loss": 1.08886, "time": 1.22984}
{"mode": "train", "epoch": 1, "iter": 700, "lr": 7e-05, "memory": 5614, "data_time": 0.00567, "loss_rpn_cls": 0.12848, "loss_rpn_bbox": 0.02996, "s0.loss_cls": 0.34104, "s0.acc": 91.99414, "s0.loss_bbox": 0.15387, "s1.loss_cls": 0.13628, "s1.acc": 93.71191, "s1.loss_bbox": 0.09716, "s2.loss_cls": 0.05024, "s2.acc": 95.78027, "s2.loss_bbox": 0.03369, "loss": 0.97071, "time": 1.22879}
{"mode": "train", "epoch": 1, "iter": 750, "lr": 8e-05, "memory": 5614, "data_time": 0.00552, "loss_rpn_cls": 0.12602, "loss_rpn_bbox": 0.03171, "s0.loss_cls": 0.37401, "s0.acc": 90.9375, "s0.loss_bbox": 0.1796, "s1.loss_cls": 0.15255, "s1.acc": 92.72949, "s1.loss_bbox": 0.11415, "s2.loss_cls": 0.05703, "s2.acc": 95.13379, "s2.loss_bbox": 0.03928, "loss": 1.07435, "time": 1.22393}
{"mode": "train", "epoch": 1, "iter": 800, "lr": 8e-05, "memory": 5614, "data_time": 0.00571, "loss_rpn_cls": 0.12266, "loss_rpn_bbox": 0.02777, "s0.loss_cls": 0.34456, "s0.acc": 91.91211, "s0.loss_bbox": 0.15652, "s1.loss_cls": 0.14028, "s1.acc": 93.40137, "s1.loss_bbox": 0.09976, "s2.loss_cls": 0.05307, "s2.acc": 95.44336, "s2.loss_bbox": 0.03466, "loss": 0.97927, "time": 1.23962}
{"mode": "train", "epoch": 1, "iter": 850, "lr": 9e-05, "memory": 5614, "data_time": 0.00568, "loss_rpn_cls": 0.13792, "loss_rpn_bbox": 0.03195, "s0.loss_cls": 0.38189, "s0.acc": 91.38281, "s0.loss_bbox": 0.17623, "s1.loss_cls": 0.14338, "s1.acc": 93.70215, "s1.loss_bbox": 0.10145, "s2.loss_cls": 0.04955, "s2.acc": 96.10059, "s2.loss_bbox": 0.03154, "loss": 1.05391, "time": 1.21923}
{"mode": "train", "epoch": 1, "iter": 900, "lr": 9e-05, "memory": 5614, "data_time": 0.00576, "loss_rpn_cls": 0.13216, "loss_rpn_bbox": 0.02658, "s0.loss_cls": 0.32788, "s0.acc": 92.29199, "s0.loss_bbox": 0.15032, "s1.loss_cls": 0.13373, "s1.acc": 93.72363, "s1.loss_bbox": 0.09764, "s2.loss_cls": 0.04996, "s2.acc": 95.69043, "s2.loss_bbox": 0.03311, "loss": 0.95138, "time": 1.21804}
{"mode": "train", "epoch": 1, "iter": 950, "lr": 9e-05, "memory": 5614, "data_time": 0.00573, "loss_rpn_cls": 0.15311, "loss_rpn_bbox": 0.03794, "s0.loss_cls": 0.41317, "s0.acc": 90.8418, "s0.loss_bbox": 0.18361, "s1.loss_cls": 0.15754, "s1.acc": 93.05859, "s1.loss_bbox": 0.11045, "s2.loss_cls": 0.05413, "s2.acc": 95.75684, "s2.loss_bbox": 0.03364, "loss": 1.14358, "time": 1.22569}
{"mode": "train", "epoch": 1, "iter": 1000, "lr": 0.0001, "memory": 5614, "data_time": 0.00563, "loss_rpn_cls": 0.16108, "loss_rpn_bbox": 0.03532, "s0.loss_cls": 0.37633, "s0.acc": 92.06738, "s0.loss_bbox": 0.16108, "s1.loss_cls": 0.13939, "s1.acc": 94.31836, "s1.loss_bbox": 0.08927, "s2.loss_cls": 0.04843, "s2.acc": 96.6084, "s2.loss_bbox": 0.02596, "loss": 1.03687, "time": 1.22285}
{"mode": "train", "epoch": 1, "iter": 1050, "lr": 0.0001, "memory": 5614, "data_time": 0.0055, "loss_rpn_cls": 0.1335, "loss_rpn_bbox": 0.02661, "s0.loss_cls": 0.34364, "s0.acc": 92.74316, "s0.loss_bbox": 0.14486, "s1.loss_cls": 0.12759, "s1.acc": 94.77246, "s1.loss_bbox": 0.08445, "s2.loss_cls": 0.04123, "s2.acc": 97.07129, "s2.loss_bbox": 0.02322, "loss": 0.92509, "time": 1.22561}
{"mode": "train", "epoch": 1, "iter": 1100, "lr": 0.0001, "memory": 5614, "data_time": 0.00563, "loss_rpn_cls": 0.1671, "loss_rpn_bbox": 0.037, "s0.loss_cls": 0.3991, "s0.acc": 91.23828, "s0.loss_bbox": 0.17668, "s1.loss_cls": 0.14698, "s1.acc": 93.8291, "s1.loss_bbox": 0.10036, "s2.loss_cls": 0.04932, "s2.acc": 96.45117, "s2.loss_bbox": 0.0283, "loss": 1.10486, "time": 1.23213}
{"mode": "val", "epoch": 1, "iter": 448, "lr": 0.0001, "bbox_mAP": 0.008, "bbox_mAP_50": 0.018, "bbox_mAP_75": 0.006, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.0, "bbox_mAP_l": 0.01, "bbox_mAP_copypaste": "0.008 0.018 0.006 0.000 0.000 0.010"}
{"mode": "train", "epoch": 2, "iter": 50, "lr": 0.0001, "memory": 5614, "data_time": 0.04978, "loss_rpn_cls": 0.14135, "loss_rpn_bbox": 0.02988, "s0.loss_cls": 0.34992, "s0.acc": 92.08789, "s0.loss_bbox": 0.15458, "s1.loss_cls": 0.13403, "s1.acc": 94.03809, "s1.loss_bbox": 0.0955, "s2.loss_cls": 0.04626, "s2.acc": 96.43848, "s2.loss_bbox": 0.02867, "loss": 0.98019, "time": 1.30399}
{"mode": "train", "epoch": 2, "iter": 100, "lr": 0.0001, "memory": 5614, "data_time": 0.00555, "loss_rpn_cls": 0.14582, "loss_rpn_bbox": 0.03028, "s0.loss_cls": 0.35338, "s0.acc": 91.99219, "s0.loss_bbox": 0.15711, "s1.loss_cls": 0.13385, "s1.acc": 94.03223, "s1.loss_bbox": 0.09577, "s2.loss_cls": 0.04634, "s2.acc": 96.49316, "s2.loss_bbox": 0.02768, "loss": 0.99022, "time": 1.23888}
{"mode": "train", "epoch": 2, "iter": 150, "lr": 0.0001, "memory": 5614, "data_time": 0.00544, "loss_rpn_cls": 0.16671, "loss_rpn_bbox": 0.03512, "s0.loss_cls": 0.39643, "s0.acc": 91.11621, "s0.loss_bbox": 0.17532, "s1.loss_cls": 0.14914, "s1.acc": 93.64844, "s1.loss_bbox": 0.1012, "s2.loss_cls": 0.05045, "s2.acc": 96.40137, "s2.loss_bbox": 0.02753, "loss": 1.10191, "time": 1.24626}
{"mode": "train", "epoch": 2, "iter": 200, "lr": 0.0001, "memory": 5614, "data_time": 0.00547, "loss_rpn_cls": 0.16369, "loss_rpn_bbox": 0.03538, "s0.loss_cls": 0.32133, "s0.acc": 93.16016, "s0.loss_bbox": 0.13183, "s1.loss_cls": 0.12046, "s1.acc": 95.05664, "s1.loss_bbox": 0.07589, "s2.loss_cls": 0.04182, "s2.acc": 97.13965, "s2.loss_bbox": 0.02094, "loss": 0.91136, "time": 1.22225}
{"mode": "train", "epoch": 2, "iter": 250, "lr": 0.0001, "memory": 5614, "data_time": 0.00551, "loss_rpn_cls": 0.15396, "loss_rpn_bbox": 0.03264, "s0.loss_cls": 0.33941, "s0.acc": 92.56543, "s0.loss_bbox": 0.15428, "s1.loss_cls": 0.12011, "s1.acc": 95.05957, "s1.loss_bbox": 0.08185, "s2.loss_cls": 0.03808, "s2.acc": 97.36719, "s2.loss_bbox": 0.01971, "loss": 0.94003, "time": 1.22885}
{"mode": "train", "epoch": 2, "iter": 300, "lr": 0.0001, "memory": 5614, "data_time": 0.00538, "loss_rpn_cls": 0.13893, "loss_rpn_bbox": 0.02916, "s0.loss_cls": 0.35168, "s0.acc": 92.19238, "s0.loss_bbox": 0.15771, "s1.loss_cls": 0.13124, "s1.acc": 94.4668, "s1.loss_bbox": 0.091, "s2.loss_cls": 0.04177, "s2.acc": 96.97754, "s2.loss_bbox": 0.02417, "loss": 0.96566, "time": 1.23063}
{"mode": "train", "epoch": 2, "iter": 350, "lr": 0.0001, "memory": 5614, "data_time": 0.00557, "loss_rpn_cls": 0.16007, "loss_rpn_bbox": 0.032, "s0.loss_cls": 0.3688, "s0.acc": 91.54004, "s0.loss_bbox": 0.16452, "s1.loss_cls": 0.14282, "s1.acc": 93.6709, "s1.loss_bbox": 0.09977, "s2.loss_cls": 0.05007, "s2.acc": 96.2334, "s2.loss_bbox": 0.02973, "loss": 1.04779, "time": 1.22616}
{"mode": "train", "epoch": 2, "iter": 400, "lr": 0.0001, "memory": 5614, "data_time": 0.00546, "loss_rpn_cls": 0.19099, "loss_rpn_bbox": 0.04105, "s0.loss_cls": 0.38719, "s0.acc": 92.51758, "s0.loss_bbox": 0.1585, "s1.loss_cls": 0.13126, "s1.acc": 95.43164, "s1.loss_bbox": 0.07342, "s2.loss_cls": 0.04104, "s2.acc": 97.59375, "s2.loss_bbox": 0.01542, "loss": 1.03886, "time": 1.22632}
{"mode": "train", "epoch": 2, "iter": 450, "lr": 0.0001, "memory": 5614, "data_time": 0.00537, "loss_rpn_cls": 0.16708, "loss_rpn_bbox": 0.03289, "s0.loss_cls": 0.33625, "s0.acc": 92.96191, "s0.loss_bbox": 0.14165, "s1.loss_cls": 0.12267, "s1.acc": 95.12305, "s1.loss_bbox": 0.08001, "s2.loss_cls": 0.03872, "s2.acc": 97.40918, "s2.loss_bbox": 0.01894, "loss": 0.93821, "time": 1.22815}
{"mode": "train", "epoch": 2, "iter": 500, "lr": 0.0001, "memory": 5614, "data_time": 0.00543, "loss_rpn_cls": 0.14114, "loss_rpn_bbox": 0.02993, "s0.loss_cls": 0.31616, "s0.acc": 93.14844, "s0.loss_bbox": 0.13616, "s1.loss_cls": 0.11878, "s1.acc": 95.02344, "s1.loss_bbox": 0.08103, "s2.loss_cls": 0.03896, "s2.acc": 97.29492, "s2.loss_bbox": 0.02029, "loss": 0.88245, "time": 1.22672}
{"mode": "train", "epoch": 2, "iter": 550, "lr": 0.0001, "memory": 5614, "data_time": 0.00542, "loss_rpn_cls": 0.16199, "loss_rpn_bbox": 0.0318, "s0.loss_cls": 0.35331, "s0.acc": 92.52246, "s0.loss_bbox": 0.15432, "s1.loss_cls": 0.1262, "s1.acc": 94.97461, "s1.loss_bbox": 0.08313, "s2.loss_cls": 0.03979, "s2.acc": 97.33008, "s2.loss_bbox": 0.01967, "loss": 0.97019, "time": 1.22567}
{"mode": "train", "epoch": 2, "iter": 600, "lr": 0.0001, "memory": 5614, "data_time": 0.00541, "loss_rpn_cls": 0.13711, "loss_rpn_bbox": 0.02678, "s0.loss_cls": 0.33335, "s0.acc": 92.68066, "s0.loss_bbox": 0.1481, "s1.loss_cls": 0.12046, "s1.acc": 94.94336, "s1.loss_bbox": 0.08389, "s2.loss_cls": 0.03823, "s2.acc": 97.33398, "s2.loss_bbox": 0.02056, "loss": 0.90848, "time": 1.22116}
{"mode": "train", "epoch": 2, "iter": 650, "lr": 0.0001, "memory": 5614, "data_time": 0.00543, "loss_rpn_cls": 0.14931, "loss_rpn_bbox": 0.03004, "s0.loss_cls": 0.36266, "s0.acc": 92.31543, "s0.loss_bbox": 0.1573, "s1.loss_cls": 0.12943, "s1.acc": 94.86133, "s1.loss_bbox": 0.08557, "s2.loss_cls": 0.04025, "s2.acc": 97.30664, "s2.loss_bbox": 0.02035, "loss": 0.9749, "time": 1.21975}
{"mode": "train", "epoch": 2, "iter": 700, "lr": 0.0001, "memory": 5614, "data_time": 0.00543, "loss_rpn_cls": 0.15025, "loss_rpn_bbox": 0.03055, "s0.loss_cls": 0.34034, "s0.acc": 92.28613, "s0.loss_bbox": 0.15388, "s1.loss_cls": 0.13067, "s1.acc": 94.41504, "s1.loss_bbox": 0.09131, "s2.loss_cls": 0.04261, "s2.acc": 96.92773, "s2.loss_bbox": 0.02356, "loss": 0.96316, "time": 1.21949}
{"mode": "train", "epoch": 2, "iter": 750, "lr": 0.0001, "memory": 5614, "data_time": 0.00543, "loss_rpn_cls": 0.15762, "loss_rpn_bbox": 0.03135, "s0.loss_cls": 0.33407, "s0.acc": 92.8291, "s0.loss_bbox": 0.14534, "s1.loss_cls": 0.1181, "s1.acc": 95.23633, "s1.loss_bbox": 0.07756, "s2.loss_cls": 0.03852, "s2.acc": 97.41309, "s2.loss_bbox": 0.0193, "loss": 0.92186, "time": 1.22857}
{"mode": "train", "epoch": 2, "iter": 800, "lr": 0.0001, "memory": 5614, "data_time": 0.00547, "loss_rpn_cls": 0.14003, "loss_rpn_bbox": 0.03008, "s0.loss_cls": 0.34747, "s0.acc": 92.70898, "s0.loss_bbox": 0.15276, "s1.loss_cls": 0.11951, "s1.acc": 95.35156, "s1.loss_bbox": 0.07793, "s2.loss_cls": 0.0357, "s2.acc": 97.65039, "s2.loss_bbox": 0.01703, "loss": 0.92051, "time": 1.22633}
{"mode": "train", "epoch": 2, "iter": 850, "lr": 0.0001, "memory": 5614, "data_time": 0.00552, "loss_rpn_cls": 0.16749, "loss_rpn_bbox": 0.03148, "s0.loss_cls": 0.39935, "s0.acc": 91.51758, "s0.loss_bbox": 0.17634, "s1.loss_cls": 0.13873, "s1.acc": 94.63379, "s1.loss_bbox": 0.08988, "s2.loss_cls": 0.04168, "s2.acc": 97.26172, "s2.loss_bbox": 0.01933, "loss": 1.06427, "time": 1.22894}
{"mode": "train", "epoch": 2, "iter": 900, "lr": 0.0001, "memory": 5614, "data_time": 0.00552, "loss_rpn_cls": 0.15415, "loss_rpn_bbox": 0.0296, "s0.loss_cls": 0.36295, "s0.acc": 92.30762, "s0.loss_bbox": 0.15836, "s1.loss_cls": 0.13001, "s1.acc": 94.81152, "s1.loss_bbox": 0.08631, "s2.loss_cls": 0.04131, "s2.acc": 97.20703, "s2.loss_bbox": 0.02123, "loss": 0.98391, "time": 1.22429}
{"mode": "train", "epoch": 2, "iter": 950, "lr": 0.0001, "memory": 5614, "data_time": 0.00559, "loss_rpn_cls": 0.14045, "loss_rpn_bbox": 0.03036, "s0.loss_cls": 0.31154, "s0.acc": 93.12598, "s0.loss_bbox": 0.13864, "s1.loss_cls": 0.11256, "s1.acc": 95.31934, "s1.loss_bbox": 0.07638, "s2.loss_cls": 0.03573, "s2.acc": 97.50195, "s2.loss_bbox": 0.01901, "loss": 0.86466, "time": 1.23046}
{"mode": "train", "epoch": 2, "iter": 1000, "lr": 0.0001, "memory": 5614, "data_time": 0.00548, "loss_rpn_cls": 0.14865, "loss_rpn_bbox": 0.02971, "s0.loss_cls": 0.35395, "s0.acc": 92.32715, "s0.loss_bbox": 0.15515, "s1.loss_cls": 0.12771, "s1.acc": 94.80371, "s1.loss_bbox": 0.08668, "s2.loss_cls": 0.03943, "s2.acc": 97.27734, "s2.loss_bbox": 0.02094, "loss": 0.96223, "time": 1.22834}
{"mode": "train", "epoch": 2, "iter": 1050, "lr": 0.0001, "memory": 5614, "data_time": 0.00551, "loss_rpn_cls": 0.19045, "loss_rpn_bbox": 0.04351, "s0.loss_cls": 0.37372, "s0.acc": 91.54297, "s0.loss_bbox": 0.1763, "s1.loss_cls": 0.13518, "s1.acc": 94.39941, "s1.loss_bbox": 0.09334, "s2.loss_cls": 0.04239, "s2.acc": 97.09668, "s2.loss_bbox": 0.02016, "loss": 1.07505, "time": 1.22955}
{"mode": "train", "epoch": 2, "iter": 1100, "lr": 0.0001, "memory": 5614, "data_time": 0.00545, "loss_rpn_cls": 0.16784, "loss_rpn_bbox": 0.03559, "s0.loss_cls": 0.37087, "s0.acc": 91.96973, "s0.loss_bbox": 0.16604, "s1.loss_cls": 0.13043, "s1.acc": 94.62695, "s1.loss_bbox": 0.08816, "s2.loss_cls": 0.04104, "s2.acc": 97.125, "s2.loss_bbox": 0.02123, "loss": 1.02119, "time": 1.23232}
{"mode": "val", "epoch": 2, "iter": 448, "lr": 0.0001, "bbox_mAP": 0.005, "bbox_mAP_50": 0.017, "bbox_mAP_75": 0.001, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.0, "bbox_mAP_l": 0.007, "bbox_mAP_copypaste": "0.005 0.017 0.001 0.000 0.000 0.007"}
{"mode": "train", "epoch": 3, "iter": 50, "lr": 0.0001, "memory": 5614, "data_time": 0.05013, "loss_rpn_cls": 0.1335, "loss_rpn_bbox": 0.02563, "s0.loss_cls": 0.32746, "s0.acc": 92.99609, "s0.loss_bbox": 0.14197, "s1.loss_cls": 0.11729, "s1.acc": 95.36035, "s1.loss_bbox": 0.07783, "s2.loss_cls": 0.03685, "s2.acc": 97.60156, "s2.loss_bbox": 0.01852, "loss": 0.87904, "time": 1.28001}
{"mode": "train", "epoch": 3, "iter": 100, "lr": 0.0001, "memory": 5614, "data_time": 0.00694, "loss_rpn_cls": 0.14985, "loss_rpn_bbox": 0.03184, "s0.loss_cls": 0.33501, "s0.acc": 92.82227, "s0.loss_bbox": 0.14717, "s1.loss_cls": 0.11833, "s1.acc": 95.24609, "s1.loss_bbox": 0.07832, "s2.loss_cls": 0.03683, "s2.acc": 97.52441, "s2.loss_bbox": 0.0179, "loss": 0.91524, "time": 1.22148}
{"mode": "train", "epoch": 3, "iter": 150, "lr": 0.0001, "memory": 5614, "data_time": 0.00692, "loss_rpn_cls": 0.14665, "loss_rpn_bbox": 0.02833, "s0.loss_cls": 0.33649, "s0.acc": 92.59473, "s0.loss_bbox": 0.14889, "s1.loss_cls": 0.12236, "s1.acc": 94.93652, "s1.loss_bbox": 0.085, "s2.loss_cls": 0.03811, "s2.acc": 97.39844, "s2.loss_bbox": 0.01974, "loss": 0.92557, "time": 1.24572}
{"mode": "train", "epoch": 3, "iter": 200, "lr": 0.0001, "memory": 5614, "data_time": 0.00693, "loss_rpn_cls": 0.16506, "loss_rpn_bbox": 0.03289, "s0.loss_cls": 0.41024, "s0.acc": 91.0957, "s0.loss_bbox": 0.18423, "s1.loss_cls": 0.14288, "s1.acc": 94.12305, "s1.loss_bbox": 0.09865, "s2.loss_cls": 0.04352, "s2.acc": 96.98535, "s2.loss_bbox": 0.02231, "loss": 1.09978, "time": 1.23864}
{"mode": "train", "epoch": 3, "iter": 250, "lr": 0.0001, "memory": 5614, "data_time": 0.00674, "loss_rpn_cls": 0.14165, "loss_rpn_bbox": 0.02834, "s0.loss_cls": 0.31267, "s0.acc": 93.34961, "s0.loss_bbox": 0.13296, "s1.loss_cls": 0.11537, "s1.acc": 95.24023, "s1.loss_bbox": 0.07862, "s2.loss_cls": 0.03648, "s2.acc": 97.45117, "s2.loss_bbox": 0.0194, "loss": 0.8655, "time": 1.2231}
{"mode": "train", "epoch": 3, "iter": 300, "lr": 0.0001, "memory": 5614, "data_time": 0.00675, "loss_rpn_cls": 0.13946, "loss_rpn_bbox": 0.02832, "s0.loss_cls": 0.3041, "s0.acc": 93.11133, "s0.loss_bbox": 0.13697, "s1.loss_cls": 0.11506, "s1.acc": 95.01855, "s1.loss_bbox": 0.08252, "s2.loss_cls": 0.037, "s2.acc": 97.31641, "s2.loss_bbox": 0.02113, "loss": 0.86456, "time": 1.23974}
{"mode": "train", "epoch": 3, "iter": 350, "lr": 0.0001, "memory": 5614, "data_time": 0.00697, "loss_rpn_cls": 0.15019, "loss_rpn_bbox": 0.0316, "s0.loss_cls": 0.35828, "s0.acc": 92.09375, "s0.loss_bbox": 0.16004, "s1.loss_cls": 0.12947, "s1.acc": 94.58398, "s1.loss_bbox": 0.09089, "s2.loss_cls": 0.03904, "s2.acc": 97.22266, "s2.loss_bbox": 0.02132, "loss": 0.98083, "time": 1.22668}
{"mode": "train", "epoch": 3, "iter": 400, "lr": 0.0001, "memory": 5614, "data_time": 0.00695, "loss_rpn_cls": 0.14721, "loss_rpn_bbox": 0.03095, "s0.loss_cls": 0.33508, "s0.acc": 92.55664, "s0.loss_bbox": 0.15401, "s1.loss_cls": 0.12176, "s1.acc": 94.95996, "s1.loss_bbox": 0.08607, "s2.loss_cls": 0.03607, "s2.acc": 97.49805, "s2.loss_bbox": 0.01849, "loss": 0.92963, "time": 1.24724}
{"mode": "train", "epoch": 3, "iter": 450, "lr": 0.0001, "memory": 5614, "data_time": 0.00699, "loss_rpn_cls": 0.18551, "loss_rpn_bbox": 0.04153, "s0.loss_cls": 0.40399, "s0.acc": 91.14844, "s0.loss_bbox": 0.1872, "s1.loss_cls": 0.13894, "s1.acc": 94.43945, "s1.loss_bbox": 0.09223, "s2.loss_cls": 0.04164, "s2.acc": 97.15234, "s2.loss_bbox": 0.01934, "loss": 1.11038, "time": 1.24457}
{"mode": "train", "epoch": 3, "iter": 500, "lr": 0.0001, "memory": 5614, "data_time": 0.00684, "loss_rpn_cls": 0.16329, "loss_rpn_bbox": 0.03661, "s0.loss_cls": 0.39601, "s0.acc": 90.9668, "s0.loss_bbox": 0.18471, "s1.loss_cls": 0.14353, "s1.acc": 93.9043, "s1.loss_bbox": 0.1029, "s2.loss_cls": 0.04493, "s2.acc": 96.80371, "s2.loss_bbox": 0.0241, "loss": 1.09608, "time": 1.22956}
{"mode": "train", "epoch": 3, "iter": 550, "lr": 0.0001, "memory": 5614, "data_time": 0.00693, "loss_rpn_cls": 0.17113, "loss_rpn_bbox": 0.03697, "s0.loss_cls": 0.36517, "s0.acc": 91.92871, "s0.loss_bbox": 0.15962, "s1.loss_cls": 0.13304, "s1.acc": 94.42773, "s1.loss_bbox": 0.08957, "s2.loss_cls": 0.04304, "s2.acc": 97.01562, "s2.loss_bbox": 0.02141, "loss": 1.01996, "time": 1.21782}
{"mode": "train", "epoch": 3, "iter": 600, "lr": 0.0001, "memory": 5614, "data_time": 0.00696, "loss_rpn_cls": 0.13222, "loss_rpn_bbox": 0.02468, "s0.loss_cls": 0.32351, "s0.acc": 93.01074, "s0.loss_bbox": 0.13884, "s1.loss_cls": 0.12192, "s1.acc": 94.98828, "s1.loss_bbox": 0.0846, "s2.loss_cls": 0.03864, "s2.acc": 97.40527, "s2.loss_bbox": 0.02023, "loss": 0.88464, "time": 1.21995}
{"mode": "train", "epoch": 3, "iter": 650, "lr": 0.0001, "memory": 5614, "data_time": 0.00693, "loss_rpn_cls": 0.15129, "loss_rpn_bbox": 0.03384, "s0.loss_cls": 0.33182, "s0.acc": 92.81543, "s0.loss_bbox": 0.14343, "s1.loss_cls": 0.1207, "s1.acc": 94.97852, "s1.loss_bbox": 0.0831, "s2.loss_cls": 0.03731, "s2.acc": 97.40918, "s2.loss_bbox": 0.01902, "loss": 0.92051, "time": 1.21929}
{"mode": "train", "epoch": 3, "iter": 700, "lr": 0.0001, "memory": 5614, "data_time": 0.00707, "loss_rpn_cls": 0.15219, "loss_rpn_bbox": 0.03582, "s0.loss_cls": 0.34825, "s0.acc": 92.25781, "s0.loss_bbox": 0.15163, "s1.loss_cls": 0.13001, "s1.acc": 94.48047, "s1.loss_bbox": 0.08979, "s2.loss_cls": 0.04133, "s2.acc": 97.05859, "s2.loss_bbox": 0.02165, "loss": 0.97067, "time": 1.22861}
{"mode": "train", "epoch": 3, "iter": 750, "lr": 0.0001, "memory": 5614, "data_time": 0.00728, "loss_rpn_cls": 0.16642, "loss_rpn_bbox": 0.03394, "s0.loss_cls": 0.37938, "s0.acc": 91.27051, "s0.loss_bbox": 0.17735, "s1.loss_cls": 0.13444, "s1.acc": 94.19336, "s1.loss_bbox": 0.0976, "s2.loss_cls": 0.04182, "s2.acc": 97.02344, "s2.loss_bbox": 0.0227, "loss": 1.05365, "time": 1.24682}
{"mode": "train", "epoch": 3, "iter": 800, "lr": 0.0001, "memory": 5614, "data_time": 0.00717, "loss_rpn_cls": 0.14254, "loss_rpn_bbox": 0.03117, "s0.loss_cls": 0.35168, "s0.acc": 92.34082, "s0.loss_bbox": 0.15551, "s1.loss_cls": 0.129, "s1.acc": 94.69824, "s1.loss_bbox": 0.0895, "s2.loss_cls": 0.03954, "s2.acc": 97.2959, "s2.loss_bbox": 0.02037, "loss": 0.9593, "time": 1.23616}
{"mode": "train", "epoch": 3, "iter": 850, "lr": 0.0001, "memory": 5614, "data_time": 0.00697, "loss_rpn_cls": 0.15539, "loss_rpn_bbox": 0.03525, "s0.loss_cls": 0.3831, "s0.acc": 91.39746, "s0.loss_bbox": 0.17364, "s1.loss_cls": 0.13941, "s1.acc": 94.23145, "s1.loss_bbox": 0.09641, "s2.loss_cls": 0.0429, "s2.acc": 97.04883, "s2.loss_bbox": 0.02191, "loss": 1.048, "time": 1.22777}
{"mode": "train", "epoch": 3, "iter": 900, "lr": 0.0001, "memory": 5614, "data_time": 0.00718, "loss_rpn_cls": 0.13258, "loss_rpn_bbox": 0.0265, "s0.loss_cls": 0.32517, "s0.acc": 92.74707, "s0.loss_bbox": 0.14359, "s1.loss_cls": 0.11928, "s1.acc": 94.91406, "s1.loss_bbox": 0.08333, "s2.loss_cls": 0.03775, "s2.acc": 97.2373, "s2.loss_bbox": 0.02152, "loss": 0.88972, "time": 1.22981}
{"mode": "train", "epoch": 3, "iter": 950, "lr": 0.0001, "memory": 5614, "data_time": 0.00715, "loss_rpn_cls": 0.15589, "loss_rpn_bbox": 0.03345, "s0.loss_cls": 0.37735, "s0.acc": 91.53125, "s0.loss_bbox": 0.17536, "s1.loss_cls": 0.13751, "s1.acc": 94.16016, "s1.loss_bbox": 0.09891, "s2.loss_cls": 0.04261, "s2.acc": 96.96875, "s2.loss_bbox": 0.02344, "loss": 1.04451, "time": 1.22938}
{"mode": "train", "epoch": 3, "iter": 1000, "lr": 0.0001, "memory": 5614, "data_time": 0.00718, "loss_rpn_cls": 0.14922, "loss_rpn_bbox": 0.03024, "s0.loss_cls": 0.33418, "s0.acc": 92.62891, "s0.loss_bbox": 0.14754, "s1.loss_cls": 0.12289, "s1.acc": 94.86328, "s1.loss_bbox": 0.08455, "s2.loss_cls": 0.03885, "s2.acc": 97.33398, "s2.loss_bbox": 0.01956, "loss": 0.92703, "time": 1.25672}
{"mode": "train", "epoch": 3, "iter": 1050, "lr": 0.0001, "memory": 5614, "data_time": 0.00679, "loss_rpn_cls": 0.12934, "loss_rpn_bbox": 0.02802, "s0.loss_cls": 0.30459, "s0.acc": 93.17578, "s0.loss_bbox": 0.13875, "s1.loss_cls": 0.1119, "s1.acc": 95.20898, "s1.loss_bbox": 0.0805, "s2.loss_cls": 0.0341, "s2.acc": 97.56445, "s2.loss_bbox": 0.01905, "loss": 0.84625, "time": 1.21082}
{"mode": "train", "epoch": 3, "iter": 1100, "lr": 0.0001, "memory": 5614, "data_time": 0.007, "loss_rpn_cls": 0.15985, "loss_rpn_bbox": 0.03636, "s0.loss_cls": 0.32416, "s0.acc": 92.53223, "s0.loss_bbox": 0.14469, "s1.loss_cls": 0.12171, "s1.acc": 94.54785, "s1.loss_bbox": 0.08601, "s2.loss_cls": 0.04057, "s2.acc": 96.94043, "s2.loss_bbox": 0.02204, "loss": 0.93539, "time": 1.22753}
{"mode": "val", "epoch": 3, "iter": 448, "lr": 0.0001, "bbox_mAP": 0.004, "bbox_mAP_50": 0.011, "bbox_mAP_75": 0.002, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.0, "bbox_mAP_l": 0.005, "bbox_mAP_copypaste": "0.004 0.011 0.002 0.000 0.000 0.005"}
{"mode": "train", "epoch": 4, "iter": 50, "lr": 0.0001, "memory": 5614, "data_time": 0.05068, "loss_rpn_cls": 0.1504, "loss_rpn_bbox": 0.02886, "s0.loss_cls": 0.35174, "s0.acc": 92.30273, "s0.loss_bbox": 0.15755, "s1.loss_cls": 0.12587, "s1.acc": 94.82422, "s1.loss_bbox": 0.08679, "s2.loss_cls": 0.039, "s2.acc": 97.33105, "s2.loss_bbox": 0.02016, "loss": 0.96037, "time": 1.27117}
{"mode": "train", "epoch": 4, "iter": 100, "lr": 0.0001, "memory": 5614, "data_time": 0.00665, "loss_rpn_cls": 0.13914, "loss_rpn_bbox": 0.02688, "s0.loss_cls": 0.32768, "s0.acc": 92.76465, "s0.loss_bbox": 0.14497, "s1.loss_cls": 0.11911, "s1.acc": 94.89062, "s1.loss_bbox": 0.08599, "s2.loss_cls": 0.03742, "s2.acc": 97.33984, "s2.loss_bbox": 0.02098, "loss": 0.90218, "time": 1.23808}
{"mode": "train", "epoch": 4, "iter": 150, "lr": 0.0001, "memory": 5614, "data_time": 0.00648, "loss_rpn_cls": 0.14247, "loss_rpn_bbox": 0.02892, "s0.loss_cls": 0.33728, "s0.acc": 92.44141, "s0.loss_bbox": 0.15188, "s1.loss_cls": 0.12318, "s1.acc": 94.65527, "s1.loss_bbox": 0.08789, "s2.loss_cls": 0.03948, "s2.acc": 97.14062, "s2.loss_bbox": 0.02194, "loss": 0.93304, "time": 1.22503}
{"mode": "train", "epoch": 4, "iter": 200, "lr": 0.0001, "memory": 5614, "data_time": 0.00677, "loss_rpn_cls": 0.14705, "loss_rpn_bbox": 0.03169, "s0.loss_cls": 0.34023, "s0.acc": 92.30762, "s0.loss_bbox": 0.15166, "s1.loss_cls": 0.12811, "s1.acc": 94.38086, "s1.loss_bbox": 0.0928, "s2.loss_cls": 0.04033, "s2.acc": 96.98438, "s2.loss_bbox": 0.02338, "loss": 0.95525, "time": 1.22409}
{"mode": "train", "epoch": 4, "iter": 250, "lr": 0.0001, "memory": 5614, "data_time": 0.00654, "loss_rpn_cls": 0.16231, "loss_rpn_bbox": 0.03482, "s0.loss_cls": 0.37528, "s0.acc": 91.51562, "s0.loss_bbox": 0.17484, "s1.loss_cls": 0.1346, "s1.acc": 94.30176, "s1.loss_bbox": 0.09567, "s2.loss_cls": 0.04112, "s2.acc": 97.06445, "s2.loss_bbox": 0.02169, "loss": 1.04033, "time": 1.22873}
{"mode": "train", "epoch": 4, "iter": 300, "lr": 0.0001, "memory": 5614, "data_time": 0.00649, "loss_rpn_cls": 0.13936, "loss_rpn_bbox": 0.03111, "s0.loss_cls": 0.31051, "s0.acc": 92.97559, "s0.loss_bbox": 0.13937, "s1.loss_cls": 0.11461, "s1.acc": 94.9834, "s1.loss_bbox": 0.08333, "s2.loss_cls": 0.03562, "s2.acc": 97.43164, "s2.loss_bbox": 0.01978, "loss": 0.87368, "time": 1.22936}
{"mode": "train", "epoch": 4, "iter": 350, "lr": 0.0001, "memory": 5614, "data_time": 0.00645, "loss_rpn_cls": 0.16771, "loss_rpn_bbox": 0.03695, "s0.loss_cls": 0.39931, "s0.acc": 90.9375, "s0.loss_bbox": 0.18582, "s1.loss_cls": 0.14371, "s1.acc": 93.92871, "s1.loss_bbox": 0.10002, "s2.loss_cls": 0.04537, "s2.acc": 96.80566, "s2.loss_bbox": 0.0232, "loss": 1.10208, "time": 1.22955}
{"mode": "train", "epoch": 4, "iter": 400, "lr": 0.0001, "memory": 5614, "data_time": 0.00655, "loss_rpn_cls": 0.14706, "loss_rpn_bbox": 0.03098, "s0.loss_cls": 0.33049, "s0.acc": 92.93164, "s0.loss_bbox": 0.14091, "s1.loss_cls": 0.11769, "s1.acc": 95.1416, "s1.loss_bbox": 0.08023, "s2.loss_cls": 0.03663, "s2.acc": 97.47852, "s2.loss_bbox": 0.0187, "loss": 0.9027, "time": 1.2248}
{"mode": "train", "epoch": 4, "iter": 450, "lr": 0.0001, "memory": 5614, "data_time": 0.00637, "loss_rpn_cls": 0.13969, "loss_rpn_bbox": 0.02955, "s0.loss_cls": 0.33472, "s0.acc": 92.47852, "s0.loss_bbox": 0.15272, "s1.loss_cls": 0.12104, "s1.acc": 94.75977, "s1.loss_bbox": 0.0857, "s2.loss_cls": 0.03855, "s2.acc": 97.19629, "s2.loss_bbox": 0.02086, "loss": 0.92283, "time": 1.23794}
{"mode": "train", "epoch": 4, "iter": 500, "lr": 0.0001, "memory": 5614, "data_time": 0.00661, "loss_rpn_cls": 0.16291, "loss_rpn_bbox": 0.03424, "s0.loss_cls": 0.37178, "s0.acc": 92.04688, "s0.loss_bbox": 0.16663, "s1.loss_cls": 0.1302, "s1.acc": 94.70703, "s1.loss_bbox": 0.0882, "s2.loss_cls": 0.04049, "s2.acc": 97.24609, "s2.loss_bbox": 0.02066, "loss": 1.01512, "time": 1.24945}
{"mode": "train", "epoch": 4, "iter": 550, "lr": 0.0001, "memory": 5614, "data_time": 0.00678, "loss_rpn_cls": 0.16982, "loss_rpn_bbox": 0.03471, "s0.loss_cls": 0.35708, "s0.acc": 92.07422, "s0.loss_bbox": 0.16112, "s1.loss_cls": 0.1303, "s1.acc": 94.43164, "s1.loss_bbox": 0.09204, "s2.loss_cls": 0.04097, "s2.acc": 97.08496, "s2.loss_bbox": 0.0221, "loss": 1.00814, "time": 1.23835}
{"mode": "train", "epoch": 4, "iter": 600, "lr": 0.0001, "memory": 5614, "data_time": 0.00681, "loss_rpn_cls": 0.14198, "loss_rpn_bbox": 0.03147, "s0.loss_cls": 0.33677, "s0.acc": 92.29102, "s0.loss_bbox": 0.15338, "s1.loss_cls": 0.12762, "s1.acc": 94.35352, "s1.loss_bbox": 0.09345, "s2.loss_cls": 0.04101, "s2.acc": 96.95605, "s2.loss_bbox": 0.02421, "loss": 0.94991, "time": 1.22536}
{"mode": "train", "epoch": 4, "iter": 650, "lr": 0.0001, "memory": 5614, "data_time": 0.00676, "loss_rpn_cls": 0.15325, "loss_rpn_bbox": 0.03406, "s0.loss_cls": 0.31847, "s0.acc": 93.11914, "s0.loss_bbox": 0.13529, "s1.loss_cls": 0.11588, "s1.acc": 95.07324, "s1.loss_bbox": 0.07931, "s2.loss_cls": 0.0383, "s2.acc": 97.23828, "s2.loss_bbox": 0.02132, "loss": 0.89587, "time": 1.22323}
{"mode": "train", "epoch": 4, "iter": 700, "lr": 0.0001, "memory": 5614, "data_time": 0.00652, "loss_rpn_cls": 0.14198, "loss_rpn_bbox": 0.02935, "s0.loss_cls": 0.31787, "s0.acc": 92.74902, "s0.loss_bbox": 0.14124, "s1.loss_cls": 0.11965, "s1.acc": 94.76367, "s1.loss_bbox": 0.08536, "s2.loss_cls": 0.03836, "s2.acc": 97.1543, "s2.loss_bbox": 0.02164, "loss": 0.89546, "time": 1.21853}
{"mode": "train", "epoch": 4, "iter": 750, "lr": 0.0001, "memory": 5614, "data_time": 0.00688, "loss_rpn_cls": 0.16532, "loss_rpn_bbox": 0.03424, "s0.loss_cls": 0.37876, "s0.acc": 91.7793, "s0.loss_bbox": 0.17213, "s1.loss_cls": 0.12732, "s1.acc": 94.76172, "s1.loss_bbox": 0.08494, "s2.loss_cls": 0.03977, "s2.acc": 97.19531, "s2.loss_bbox": 0.02015, "loss": 1.02264, "time": 1.23236}
{"mode": "train", "epoch": 4, "iter": 800, "lr": 0.0001, "memory": 5614, "data_time": 0.00677, "loss_rpn_cls": 0.13521, "loss_rpn_bbox": 0.02864, "s0.loss_cls": 0.35125, "s0.acc": 92.20215, "s0.loss_bbox": 0.15772, "s1.loss_cls": 0.13069, "s1.acc": 94.37305, "s1.loss_bbox": 0.09361, "s2.loss_cls": 0.04043, "s2.acc": 97.04883, "s2.loss_bbox": 0.02303, "loss": 0.96058, "time": 1.22585}
{"mode": "train", "epoch": 4, "iter": 850, "lr": 0.0001, "memory": 5614, "data_time": 0.00662, "loss_rpn_cls": 0.15474, "loss_rpn_bbox": 0.03079, "s0.loss_cls": 0.39342, "s0.acc": 91.19434, "s0.loss_bbox": 0.18156, "s1.loss_cls": 0.13961, "s1.acc": 94.22559, "s1.loss_bbox": 0.09598, "s2.loss_cls": 0.04477, "s2.acc": 96.95703, "s2.loss_bbox": 0.02251, "loss": 1.06339, "time": 1.22677}
{"mode": "train", "epoch": 4, "iter": 900, "lr": 0.0001, "memory": 5614, "data_time": 0.00678, "loss_rpn_cls": 0.13754, "loss_rpn_bbox": 0.02953, "s0.loss_cls": 0.33716, "s0.acc": 92.30762, "s0.loss_bbox": 0.15423, "s1.loss_cls": 0.12277, "s1.acc": 94.70801, "s1.loss_bbox": 0.08782, "s2.loss_cls": 0.0387, "s2.acc": 97.19531, "s2.loss_bbox": 0.02169, "loss": 0.92944, "time": 1.23698}
{"mode": "train", "epoch": 4, "iter": 950, "lr": 0.0001, "memory": 5614, "data_time": 0.00658, "loss_rpn_cls": 0.13947, "loss_rpn_bbox": 0.03286, "s0.loss_cls": 0.32075, "s0.acc": 92.52441, "s0.loss_bbox": 0.15052, "s1.loss_cls": 0.12162, "s1.acc": 94.56543, "s1.loss_bbox": 0.09055, "s2.loss_cls": 0.03921, "s2.acc": 97.14453, "s2.loss_bbox": 0.02192, "loss": 0.9169, "time": 1.22347}
{"mode": "train", "epoch": 4, "iter": 1000, "lr": 0.0001, "memory": 5614, "data_time": 0.00658, "loss_rpn_cls": 0.1491, "loss_rpn_bbox": 0.03258, "s0.loss_cls": 0.34312, "s0.acc": 92.2373, "s0.loss_bbox": 0.1538, "s1.loss_cls": 0.12374, "s1.acc": 94.64746, "s1.loss_bbox": 0.08671, "s2.loss_cls": 0.03959, "s2.acc": 97.10156, "s2.loss_bbox": 0.02127, "loss": 0.9499, "time": 1.22401}
{"mode": "train", "epoch": 4, "iter": 1050, "lr": 0.0001, "memory": 5614, "data_time": 0.00659, "loss_rpn_cls": 0.13714, "loss_rpn_bbox": 0.02859, "s0.loss_cls": 0.36119, "s0.acc": 91.66895, "s0.loss_bbox": 0.16719, "s1.loss_cls": 0.13047, "s1.acc": 94.26367, "s1.loss_bbox": 0.09409, "s2.loss_cls": 0.0417, "s2.acc": 96.90723, "s2.loss_bbox": 0.02457, "loss": 0.98494, "time": 1.23711}
{"mode": "train", "epoch": 4, "iter": 1100, "lr": 0.0001, "memory": 5614, "data_time": 0.00651, "loss_rpn_cls": 0.14482, "loss_rpn_bbox": 0.03627, "s0.loss_cls": 0.31079, "s0.acc": 93.15137, "s0.loss_bbox": 0.13564, "s1.loss_cls": 0.11464, "s1.acc": 95.08008, "s1.loss_bbox": 0.07905, "s2.loss_cls": 0.03754, "s2.acc": 97.33789, "s2.loss_bbox": 0.01997, "loss": 0.87871, "time": 1.2219}
{"mode": "val", "epoch": 4, "iter": 448, "lr": 0.0001, "bbox_mAP": 0.006, "bbox_mAP_50": 0.019, "bbox_mAP_75": 0.002, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.001, "bbox_mAP_l": 0.008, "bbox_mAP_copypaste": "0.006 0.019 0.002 0.000 0.001 0.008"}
{"mode": "train", "epoch": 5, "iter": 50, "lr": 0.0001, "memory": 5614, "data_time": 0.04972, "loss_rpn_cls": 0.1073, "loss_rpn_bbox": 0.02167, "s0.loss_cls": 0.31298, "s0.acc": 92.84082, "s0.loss_bbox": 0.13946, "s1.loss_cls": 0.11966, "s1.acc": 94.52246, "s1.loss_bbox": 0.0906, "s2.loss_cls": 0.03813, "s2.acc": 97.00684, "s2.loss_bbox": 0.02434, "loss": 0.85414, "time": 1.29967}
{"mode": "train", "epoch": 5, "iter": 100, "lr": 0.0001, "memory": 5614, "data_time": 0.00554, "loss_rpn_cls": 0.1444, "loss_rpn_bbox": 0.0319, "s0.loss_cls": 0.36883, "s0.acc": 92.05176, "s0.loss_bbox": 0.16347, "s1.loss_cls": 0.13031, "s1.acc": 94.66016, "s1.loss_bbox": 0.08751, "s2.loss_cls": 0.04147, "s2.acc": 97.14453, "s2.loss_bbox": 0.02131, "loss": 0.9892, "time": 1.22962}
{"mode": "train", "epoch": 5, "iter": 150, "lr": 0.0001, "memory": 5614, "data_time": 0.00589, "loss_rpn_cls": 0.14284, "loss_rpn_bbox": 0.03048, "s0.loss_cls": 0.30875, "s0.acc": 93.11719, "s0.loss_bbox": 0.13364, "s1.loss_cls": 0.11522, "s1.acc": 95.01465, "s1.loss_bbox": 0.0786, "s2.loss_cls": 0.03809, "s2.acc": 97.2002, "s2.loss_bbox": 0.02043, "loss": 0.86805, "time": 1.22736}
{"mode": "train", "epoch": 5, "iter": 200, "lr": 0.0001, "memory": 5614, "data_time": 0.00543, "loss_rpn_cls": 0.14803, "loss_rpn_bbox": 0.0319, "s0.loss_cls": 0.35584, "s0.acc": 92.10938, "s0.loss_bbox": 0.16171, "s1.loss_cls": 0.1264, "s1.acc": 94.60254, "s1.loss_bbox": 0.08831, "s2.loss_cls": 0.03963, "s2.acc": 97.13477, "s2.loss_bbox": 0.02125, "loss": 0.97307, "time": 1.22321}
{"mode": "train", "epoch": 5, "iter": 250, "lr": 0.0001, "memory": 5614, "data_time": 0.00537, "loss_rpn_cls": 0.16097, "loss_rpn_bbox": 0.03606, "s0.loss_cls": 0.37868, "s0.acc": 91.33496, "s0.loss_bbox": 0.17544, "s1.loss_cls": 0.13594, "s1.acc": 93.90723, "s1.loss_bbox": 0.09874, "s2.loss_cls": 0.04417, "s2.acc": 96.66211, "s2.loss_bbox": 0.02564, "loss": 1.05562, "time": 1.22487}
{"mode": "train", "epoch": 5, "iter": 300, "lr": 0.0001, "memory": 5614, "data_time": 0.00557, "loss_rpn_cls": 0.13704, "loss_rpn_bbox": 0.02815, "s0.loss_cls": 0.33749, "s0.acc": 92.40527, "s0.loss_bbox": 0.15077, "s1.loss_cls": 0.12845, "s1.acc": 94.40918, "s1.loss_bbox": 0.09339, "s2.loss_cls": 0.04064, "s2.acc": 97.05566, "s2.loss_bbox": 0.02316, "loss": 0.93909, "time": 1.22736}
{"mode": "train", "epoch": 5, "iter": 350, "lr": 0.0001, "memory": 5614, "data_time": 0.00557, "loss_rpn_cls": 0.14801, "loss_rpn_bbox": 0.02981, "s0.loss_cls": 0.34653, "s0.acc": 92.42871, "s0.loss_bbox": 0.15269, "s1.loss_cls": 0.12566, "s1.acc": 94.65234, "s1.loss_bbox": 0.08656, "s2.loss_cls": 0.04022, "s2.acc": 97.09375, "s2.loss_bbox": 0.02223, "loss": 0.95171, "time": 1.23378}
{"mode": "train", "epoch": 5, "iter": 400, "lr": 0.0001, "memory": 5614, "data_time": 0.00557, "loss_rpn_cls": 0.17231, "loss_rpn_bbox": 0.04059, "s0.loss_cls": 0.37117, "s0.acc": 91.52539, "s0.loss_bbox": 0.17358, "s1.loss_cls": 0.13626, "s1.acc": 94.1123, "s1.loss_bbox": 0.09537, "s2.loss_cls": 0.04448, "s2.acc": 96.77246, "s2.loss_bbox": 0.02345, "loss": 1.05722, "time": 1.23152}
{"mode": "train", "epoch": 5, "iter": 450, "lr": 0.0001, "memory": 5614, "data_time": 0.00562, "loss_rpn_cls": 0.13873, "loss_rpn_bbox": 0.0301, "s0.loss_cls": 0.33578, "s0.acc": 92.39648, "s0.loss_bbox": 0.14876, "s1.loss_cls": 0.126, "s1.acc": 94.51465, "s1.loss_bbox": 0.08779, "s2.loss_cls": 0.04102, "s2.acc": 96.95996, "s2.loss_bbox": 0.02281, "loss": 0.93101, "time": 1.22889}
{"mode": "train", "epoch": 5, "iter": 500, "lr": 0.0001, "memory": 5614, "data_time": 0.00551, "loss_rpn_cls": 0.14918, "loss_rpn_bbox": 0.03356, "s0.loss_cls": 0.32859, "s0.acc": 92.59473, "s0.loss_bbox": 0.14835, "s1.loss_cls": 0.12292, "s1.acc": 94.60352, "s1.loss_bbox": 0.08841, "s2.loss_cls": 0.04007, "s2.acc": 97.13965, "s2.loss_bbox": 0.02185, "loss": 0.93294, "time": 1.26766}
{"mode": "train", "epoch": 5, "iter": 550, "lr": 0.0001, "memory": 5614, "data_time": 0.00559, "loss_rpn_cls": 0.14139, "loss_rpn_bbox": 0.02875, "s0.loss_cls": 0.31529, "s0.acc": 92.97949, "s0.loss_bbox": 0.13772, "s1.loss_cls": 0.11519, "s1.acc": 95.04004, "s1.loss_bbox": 0.08115, "s2.loss_cls": 0.03722, "s2.acc": 97.29883, "s2.loss_bbox": 0.02076, "loss": 0.87747, "time": 1.22663}
{"mode": "train", "epoch": 5, "iter": 600, "lr": 0.0001, "memory": 5614, "data_time": 0.00556, "loss_rpn_cls": 0.14919, "loss_rpn_bbox": 0.03207, "s0.loss_cls": 0.32759, "s0.acc": 92.69336, "s0.loss_bbox": 0.14248, "s1.loss_cls": 0.1235, "s1.acc": 94.63379, "s1.loss_bbox": 0.08667, "s2.loss_cls": 0.04005, "s2.acc": 97.07422, "s2.loss_bbox": 0.02207, "loss": 0.92361, "time": 1.23493}
{"mode": "train", "epoch": 5, "iter": 650, "lr": 0.0001, "memory": 5614, "data_time": 0.00551, "loss_rpn_cls": 0.11763, "loss_rpn_bbox": 0.0255, "s0.loss_cls": 0.31496, "s0.acc": 92.73535, "s0.loss_bbox": 0.14206, "s1.loss_cls": 0.12145, "s1.acc": 94.46875, "s1.loss_bbox": 0.09005, "s2.loss_cls": 0.03984, "s2.acc": 96.93945, "s2.loss_bbox": 0.02472, "loss": 0.8762, "time": 1.23098}
{"mode": "train", "epoch": 5, "iter": 700, "lr": 0.0001, "memory": 5614, "data_time": 0.00554, "loss_rpn_cls": 0.13269, "loss_rpn_bbox": 0.0267, "s0.loss_cls": 0.33988, "s0.acc": 92.46973, "s0.loss_bbox": 0.15324, "s1.loss_cls": 0.12165, "s1.acc": 94.89062, "s1.loss_bbox": 0.08532, "s2.loss_cls": 0.03807, "s2.acc": 97.33301, "s2.loss_bbox": 0.02038, "loss": 0.91794, "time": 1.23235}
{"mode": "train", "epoch": 5, "iter": 750, "lr": 0.0001, "memory": 5614, "data_time": 0.0054, "loss_rpn_cls": 0.16338, "loss_rpn_bbox": 0.03705, "s0.loss_cls": 0.37162, "s0.acc": 91.62891, "s0.loss_bbox": 0.16608, "s1.loss_cls": 0.13796, "s1.acc": 93.92578, "s1.loss_bbox": 0.09753, "s2.loss_cls": 0.04542, "s2.acc": 96.61621, "s2.loss_bbox": 0.02603, "loss": 1.04507, "time": 1.22338}
{"mode": "train", "epoch": 5, "iter": 800, "lr": 0.0001, "memory": 5614, "data_time": 0.00549, "loss_rpn_cls": 0.15701, "loss_rpn_bbox": 0.03435, "s0.loss_cls": 0.34479, "s0.acc": 92.35156, "s0.loss_bbox": 0.15346, "s1.loss_cls": 0.12634, "s1.acc": 94.6377, "s1.loss_bbox": 0.08843, "s2.loss_cls": 0.04048, "s2.acc": 97.12305, "s2.loss_bbox": 0.02175, "loss": 0.96659, "time": 1.22647}
{"mode": "train", "epoch": 5, "iter": 850, "lr": 0.0001, "memory": 5614, "data_time": 0.00536, "loss_rpn_cls": 0.1596, "loss_rpn_bbox": 0.03706, "s0.loss_cls": 0.36659, "s0.acc": 91.51465, "s0.loss_bbox": 0.17414, "s1.loss_cls": 0.1359, "s1.acc": 94.02246, "s1.loss_bbox": 0.09883, "s2.loss_cls": 0.04393, "s2.acc": 96.73438, "s2.loss_bbox": 0.02489, "loss": 1.04094, "time": 1.22373}
{"mode": "train", "epoch": 5, "iter": 900, "lr": 0.0001, "memory": 5614, "data_time": 0.00544, "loss_rpn_cls": 0.13792, "loss_rpn_bbox": 0.02994, "s0.loss_cls": 0.33496, "s0.acc": 92.25195, "s0.loss_bbox": 0.15708, "s1.loss_cls": 0.12509, "s1.acc": 94.50879, "s1.loss_bbox": 0.09006, "s2.loss_cls": 0.04091, "s2.acc": 96.9873, "s2.loss_bbox": 0.02297, "loss": 0.93893, "time": 1.22447}
{"mode": "train", "epoch": 5, "iter": 950, "lr": 0.0001, "memory": 5614, "data_time": 0.00553, "loss_rpn_cls": 0.13965, "loss_rpn_bbox": 0.03075, "s0.loss_cls": 0.3053, "s0.acc": 93.29395, "s0.loss_bbox": 0.13221, "s1.loss_cls": 0.11312, "s1.acc": 95.16504, "s1.loss_bbox": 0.07757, "s2.loss_cls": 0.03724, "s2.acc": 97.32617, "s2.loss_bbox": 0.02005, "loss": 0.85589, "time": 1.23325}
{"mode": "train", "epoch": 5, "iter": 1000, "lr": 0.0001, "memory": 5614, "data_time": 0.00538, "loss_rpn_cls": 0.16687, "loss_rpn_bbox": 0.03851, "s0.loss_cls": 0.38811, "s0.acc": 91.0293, "s0.loss_bbox": 0.1837, "s1.loss_cls": 0.14182, "s1.acc": 93.82031, "s1.loss_bbox": 0.10059, "s2.loss_cls": 0.04614, "s2.acc": 96.56641, "s2.loss_bbox": 0.02604, "loss": 1.09178, "time": 1.23014}
{"mode": "train", "epoch": 5, "iter": 1050, "lr": 0.0001, "memory": 5614, "data_time": 0.00531, "loss_rpn_cls": 0.13088, "loss_rpn_bbox": 0.02552, "s0.loss_cls": 0.35745, "s0.acc": 91.96973, "s0.loss_bbox": 0.1615, "s1.loss_cls": 0.13093, "s1.acc": 94.33984, "s1.loss_bbox": 0.09359, "s2.loss_cls": 0.04169, "s2.acc": 96.95508, "s2.loss_bbox": 0.02435, "loss": 0.9659, "time": 1.23295}
{"mode": "train", "epoch": 5, "iter": 1100, "lr": 0.0001, "memory": 5614, "data_time": 0.00555, "loss_rpn_cls": 0.16144, "loss_rpn_bbox": 0.03583, "s0.loss_cls": 0.36545, "s0.acc": 91.96484, "s0.loss_bbox": 0.16309, "s1.loss_cls": 0.12851, "s1.acc": 94.51562, "s1.loss_bbox": 0.08648, "s2.loss_cls": 0.04209, "s2.acc": 96.83203, "s2.loss_bbox": 0.02308, "loss": 1.00597, "time": 1.23375}
{"mode": "val", "epoch": 5, "iter": 448, "lr": 0.0001, "bbox_mAP": 0.008, "bbox_mAP_50": 0.021, "bbox_mAP_75": 0.004, "bbox_mAP_s": 0.0, "bbox_mAP_m": 0.0, "bbox_mAP_l": 0.01, "bbox_mAP_copypaste": "0.008 0.021 0.004 0.000 0.000 0.010"}
{"mode": "train", "epoch": 6, "iter": 50, "lr": 0.0001, "memory": 5614, "data_time": 0.05057, "loss_rpn_cls": 0.15487, "loss_rpn_bbox": 0.03402, "s0.loss_cls": 0.36749, "s0.acc": 91.40039, "s0.loss_bbox": 0.17079, "s1.loss_cls": 0.13561, "s1.acc": 93.91309, "s1.loss_bbox": 0.09866, "s2.loss_cls": 0.0445, "s2.acc": 96.62207, "s2.loss_bbox": 0.02613, "loss": 1.03208, "time": 1.29999}
{"mode": "train", "epoch": 6, "iter": 100, "lr": 0.0001, "memory": 5614, "data_time": 0.00693, "loss_rpn_cls": 0.14422, "loss_rpn_bbox": 0.02931, "s0.loss_cls": 0.3222, "s0.acc": 92.86523, "s0.loss_bbox": 0.13936, "s1.loss_cls": 0.11991, "s1.acc": 94.76074, "s1.loss_bbox": 0.08348, "s2.loss_cls": 0.04046, "s2.acc": 97.01367, "s2.loss_bbox": 0.02294, "loss": 0.90188, "time": 1.24401}
{"mode": "train", "epoch": 6, "iter": 150, "lr": 0.0001, "memory": 5614, "data_time": 0.00701, "loss_rpn_cls": 0.13457, "loss_rpn_bbox": 0.02872, "s0.loss_cls": 0.32822, "s0.acc": 92.41504, "s0.loss_bbox": 0.15369, "s1.loss_cls": 0.12143, "s1.acc": 94.62402, "s1.loss_bbox": 0.08703, "s2.loss_cls": 0.03956, "s2.acc": 96.99219, "s2.loss_bbox": 0.02341, "loss": 0.91662, "time": 1.23609}
